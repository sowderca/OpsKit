<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PrtgAPI</name>
    </assembly>
    <members>
        <member name="T:PrtgAPI.ProbeStatus">
            <summary>
            Connection status of a PRTG Probe.
            </summary>
        </member>
        <member name="F:PrtgAPI.ProbeStatus.Disconnected">
            <summary>
            The probe is disconnected from the PRTG Core Server.
            </summary>
        </member>
        <member name="F:PrtgAPI.ProbeStatus.Connected">
            <summary>
            The probe is connected to the PRTG Core Server.
            </summary>
        </member>
        <member name="T:PrtgAPI.Helpers.SerialObjectGenerator`1">
            <summary>
            Transforms an ordered enumeration of tasks into an <see cref="T:System.Collections.Generic.IEnumerable`1"/> 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:PrtgAPI.Helpers.SerialObjectGenerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
        </member>
        <member name="M:PrtgAPI.Helpers.SerialObjectGenerator`1.#ctor(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Helpers.SerialObjectGenerator`1"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.Helpers.SerialObjectGenerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection and executes the task within.
            </summary>
            <returns>True if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:PrtgAPI.Helpers.SerialObjectGenerator`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:PrtgAPI.Helpers.SerialObjectGenerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:PrtgAPI.Helpers.SerialObjectGenerator`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:PrtgAPI.Helpers.ParallelObjectGenerator`1">
            <summary>
            Transforms an unordered parallel task into an <see cref="T:System.Collections.Generic.IEnumerable`1"/> 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:PrtgAPI.Helpers.ParallelObjectGenerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
        </member>
        <member name="M:PrtgAPI.Helpers.ParallelObjectGenerator`1.#ctor(System.Threading.Tasks.Task{System.Threading.Tasks.Task{`0}}[])">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Helpers.ParallelObjectGenerator`1"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.Helpers.ParallelObjectGenerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.<para />If this is the first time the enumerator has been advanced, the enumerator's task will be initialized and begin generating results in parallel for subsequent requests to <see cref="M:PrtgAPI.Helpers.ParallelObjectGenerator`1.MoveNext"/>.
            </summary>
            <returns>True if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:PrtgAPI.Helpers.ParallelObjectGenerator`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:PrtgAPI.Helpers.ParallelObjectGenerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:PrtgAPI.Helpers.ParallelObjectGenerator`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:PrtgAPI.Parameters.ChangeTriggerParameters">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for adding/modifying <see cref="F:PrtgAPI.TriggerType.Change"/> <see cref="T:PrtgAPI.NotificationTrigger"/> objects.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.ChangeTriggerParameters.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.ChangeTriggerParameters"/> class for creating a new notification trigger.
            </summary>
            <param name="objectId">The object ID the trigger will apply to.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.ChangeTriggerParameters.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.ChangeTriggerParameters"/> class for editing an existing notification trigger.
            </summary>
            <param name="objectId">The object ID the trigger is applied to.</param>
            <param name="triggerId">The sub ID of the trigger on its parent object.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.ChangeTriggerParameters.#ctor(System.Int32,PrtgAPI.NotificationTrigger,PrtgAPI.ModifyAction)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.ChangeTriggerParameters"/> class for creating a new trigger from an existing <see cref="F:PrtgAPI.TriggerType.Change"/> <see cref="T:PrtgAPI.NotificationTrigger"/>.
            </summary>
            <param name="objectId">The object ID the trigger will apply to.</param>
            <param name="sourceTrigger">The notification trigger whose properties should be used.</param>
            <param name="action">Whether these parameters will create a new trigger or edit an existing one.</param>
        </member>
        <member name="T:PrtgAPI.Parameters.SpeedTriggerParameters">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for adding/modifying <see cref="F:PrtgAPI.TriggerType.Speed"/> <see cref="T:PrtgAPI.NotificationTrigger"/> objects.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.SpeedTriggerParameters.OffNotificationAction">
            <summary>
            The <see cref="T:PrtgAPI.NotificationAction"/> to execute when the trigger's active state clears.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.SpeedTriggerParameters.Channel">
            <summary>
            The channel of the sensor this trigger should apply to.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.SpeedTriggerParameters.Latency">
            <summary>
            The delay (in seconds) this trigger should wait before executing its <see cref="P:PrtgAPI.Parameters.TriggerParameters.OnNotificationAction"/> once activated.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.SpeedTriggerParameters.Condition">
            <summary>
            The condition that controls when the <see cref="P:PrtgAPI.Parameters.SpeedTriggerParameters.Threshold"/> is activated.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.SpeedTriggerParameters.Threshold">
            <summary>
            The value which, once reached, will cause this trigger will activate. Used in conjunction with <see cref="P:PrtgAPI.Parameters.SpeedTriggerParameters.Condition"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.SpeedTriggerParameters.UnitTime">
            <summary>
            The time component of the data rate that causes this trigger to activate.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.SpeedTriggerParameters.UnitSize">
            <summary>
            The unit component of the data rate that causes this trigger to activate.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.SpeedTriggerParameters.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.SpeedTriggerParameters"/> class for creating a new notification trigger.
            </summary>
            <param name="objectId">The object ID the trigger will apply to.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.SpeedTriggerParameters.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.SpeedTriggerParameters"/> class for editing an existing notification trigger.
            </summary>
            <param name="objectId">The object ID the trigger is applied to.</param>
            <param name="triggerId">The sub ID of the trigger on its parent object.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.SpeedTriggerParameters.#ctor(System.Int32,PrtgAPI.NotificationTrigger,PrtgAPI.ModifyAction)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.SpeedTriggerParameters"/> class for creating a new trigger from an existing <see cref="F:PrtgAPI.TriggerType.Speed"/> <see cref="T:PrtgAPI.NotificationTrigger"/>.
            </summary>
            <param name="objectId">The object ID the trigger will apply to.</param>
            <param name="sourceTrigger">The notification trigger whose properties should be used.</param>
            <param name="action">Whether these parameters will create a new trigger or edit an existing one.</param>
        </member>
        <member name="T:PrtgAPI.Parameters.StateTriggerParameters">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for adding/modifying <see cref="F:PrtgAPI.TriggerType.State"/> <see cref="T:PrtgAPI.NotificationTrigger"/> objects.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.StateTriggerParameters.OffNotificationAction">
            <summary>
            The <see cref="T:PrtgAPI.NotificationAction"/> to execute when the trigger's active state clears.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.StateTriggerParameters.EscalationNotificationAction">
            <summary>
            The <see cref="T:PrtgAPI.NotificationAction"/> to fire if this trigger remains in an active state for an extended period of time.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.StateTriggerParameters.Latency">
            <summary>
            The delay (in seconds) this trigger should wait before executing its <see cref="P:PrtgAPI.Parameters.TriggerParameters.OnNotificationAction"/> once activated.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.StateTriggerParameters.EscalationLatency">
            <summary>
            The delay (in seconds) this trigger should wait before executing its <see cref="P:PrtgAPI.Parameters.StateTriggerParameters.EscalationNotificationAction"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.StateTriggerParameters.RepeatInterval">
            <summary>
            The interval (in minutes) with which the <see cref="P:PrtgAPI.Parameters.StateTriggerParameters.EscalationNotificationAction"/> should be re-executed.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.StateTriggerParameters.State">
            <summary>
            The object state that will cause this trigger to activate.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.StateTriggerParameters.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.StateTriggerParameters"/> class for creating a new notification trigger.
            </summary>
            <param name="objectId">The object ID the trigger will apply to.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.StateTriggerParameters.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.StateTriggerParameters"/> class for editing an existing notification trigger.
            </summary>
            <param name="objectId">The object ID the trigger is applied to.</param>
            <param name="triggerId">The sub ID of the trigger on its parent object.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.StateTriggerParameters.#ctor(System.Int32,PrtgAPI.NotificationTrigger,PrtgAPI.ModifyAction)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.StateTriggerParameters"/> class for creating a new trigger from an existing <see cref="F:PrtgAPI.TriggerType.State"/> <see cref="T:PrtgAPI.NotificationTrigger"/>.
            </summary>
            <param name="objectId">The object ID the trigger will apply to.</param>
            <param name="sourceTrigger">The notification trigger whose properties should be used.</param>
            <param name="action">Whether these parameters will create a new trigger or edit an existing one.</param>
        </member>
        <member name="T:PrtgAPI.Parameters.ThresholdTriggerParameters">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for adding/modifying <see cref="F:PrtgAPI.TriggerType.Threshold"/> <see cref="T:PrtgAPI.NotificationTrigger"/> objects.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ThresholdTriggerParameters.OffNotificationAction">
            <summary>
            The <see cref="T:PrtgAPI.NotificationAction"/> to execute when the trigger's active state clears.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ThresholdTriggerParameters.Latency">
            <summary>
            The delay (in seconds) this trigger should wait before executing its <see cref="P:PrtgAPI.Parameters.TriggerParameters.OnNotificationAction"/> once activated.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ThresholdTriggerParameters.Threshold">
            <summary>
            The value which, once reached, will cause this trigger will activate. Used in conjunction with <see cref="P:PrtgAPI.Parameters.ThresholdTriggerParameters.Condition"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ThresholdTriggerParameters.Condition">
            <summary>
            The condition that controls when the <see cref="P:PrtgAPI.Parameters.ThresholdTriggerParameters.Threshold"/> is activated.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ThresholdTriggerParameters.Channel">
            <summary>
            The channel of the sensor this trigger should apply to.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.ThresholdTriggerParameters.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.ThresholdTriggerParameters"/> class for creating a new notification trigger.
            </summary>
            <param name="objectId">The object ID the trigger will apply to.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.ThresholdTriggerParameters.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.ThresholdTriggerParameters"/> class for editing an existing notification trigger.
            </summary>
            <param name="objectId">The object ID the trigger is applied to.</param>
            <param name="triggerId">The sub ID of the trigger on its parent object.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.ThresholdTriggerParameters.#ctor(System.Int32,PrtgAPI.NotificationTrigger,PrtgAPI.ModifyAction)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.ThresholdTriggerParameters"/> class for creating a new trigger from an existing <see cref="F:PrtgAPI.TriggerType.Threshold"/> <see cref="T:PrtgAPI.NotificationTrigger"/>.
            </summary>
            <param name="objectId">The object ID the trigger will apply to.</param>
            <param name="sourceTrigger">The notification trigger whose properties should be used.</param>
            <param name="action">Whether these parameters will create a new trigger or edit an existing one.</param>
        </member>
        <member name="T:PrtgAPI.Parameters.TriggerParameters">
            <summary>
            <para type="description">Represents parameters use to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for adding/modifying <see cref="T:PrtgAPI.NotificationTrigger"/> objects.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.TriggerParameters.ObjectId">
            <summary>
            The ID of the object this trigger will apply to.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.TriggerParameters.SubId">
            <summary>
            If this trigger is being edited, the trigger's sub ID. If the trigger is being added, this value is null.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.TriggerParameters.Action">
            <summary>
            Whether to add a new trigger or modify an existing one.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.TriggerParameters.Type">
            <summary>
            The type of notification trigger this object will manipulate.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.TriggerParameters.OnNotificationAction">
            <summary>
            The <see cref="T:PrtgAPI.NotificationAction"/> to execute when the trigger activates.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.TriggerParameters.#ctor(PrtgAPI.TriggerType,System.Int32,System.Nullable{System.Int32},PrtgAPI.ModifyAction)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.TriggerParameters"/> class.
            </summary>
            <param name="type">The type of notification trigger this object will manipulate.</param>
            <param name="objectId">The object ID the trigger will apply to.</param>
            <param name="subId">If this trigger is being edited, the trigger's sub ID. If the trigger is being added, this value is null.</param>
            <param name="action">Whether to add a new trigger or modify an existing one.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.TriggerParameters.#ctor(PrtgAPI.TriggerType,System.Int32,PrtgAPI.NotificationTrigger,PrtgAPI.ModifyAction)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.TriggerParameters"/> class for creating a new <see cref="T:PrtgAPI.NotificationTrigger"/> from an existing one.
            </summary>
            <param name="type">The type of notification trigger these parameters will manipulate.</param>
            <param name="objectId">The ID of the object the notification trigger will apply to.</param>
            <param name="sourceTrigger">The notification trigger whose properties should be used as the basis of this trigger.</param>
            <param name="action">Whether these parameters will create a new trigger or edit an existing one.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.TriggerParameters.GetNotificationAction(PrtgAPI.TriggerProperty)">
            <summary>
            Retrieve a <see cref="T:PrtgAPI.NotificationAction"/> from this object's <see cref="P:PrtgAPI.Parameters.TriggerParameters.Parameters"/>. If the specified action type does not exist, an empty notification action is returned.
            </summary>
            <param name="actionType">The type of notification action to retrieve.</param>
            <returns>If the notification action exists, the notification action. Otherwise, an empty notification action.</returns>
        </member>
        <member name="M:PrtgAPI.Parameters.TriggerParameters.SetNotificationAction(PrtgAPI.TriggerProperty,PrtgAPI.NotificationAction)">
            <summary>
            Updates a <see cref="T:PrtgAPI.NotificationAction"/> in this object's <see cref="P:PrtgAPI.Parameters.TriggerParameters.Parameters"/>. If the notification action is null, an empty notification action is inserted. 
            </summary>
            <param name="actionType">The type of notification action to insert.</param>
            <param name="value">The notification action to insert. If this value is null, an empty notification action is inserted.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.TriggerParameters.GetCustomParameterValue(PrtgAPI.TriggerProperty)">
            <summary>
            Retrieve the value of a trigger property from this object's <see cref="P:PrtgAPI.Parameters.TriggerParameters.Parameters"/>.
            </summary>
            <param name="property">The property to retrieve.</param>
            <returns>The value of this property. If the property does not exist, this method returns null.</returns>
        </member>
        <member name="M:PrtgAPI.Parameters.TriggerParameters.UpdateCustomParameter(PrtgAPI.TriggerProperty,System.Object,System.Boolean)">
            <summary>
            Updates the value of a trigger property in this object's <see cref="P:PrtgAPI.Parameters.TriggerParameters.Parameters"/>. If the trigger property does not exist, it will be added.
            </summary>
            <param name="property">The property whose value will be updated.</param>
            <param name="value">The value to insert.</param>
            <param name="requireValue">Indicates whether null is allowed for the specified property.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.TriggerParameters.GetCustomParameterEnumXml``1(PrtgAPI.TriggerProperty)">
            <summary>
            Retrieve the enum value of a trigger property from this object's <see cref="P:PrtgAPI.Parameters.TriggerParameters.Parameters"/> that has been stored using its XML representation.
            </summary>
            <typeparam name="T">The type of enum stored in the property</typeparam>
            <param name="property">The property to retrieve.</param>
            <returns>The value of this property. If the property does not exist, this method returns null.</returns>
        </member>
        <member name="M:PrtgAPI.Parameters.TriggerParameters.GetCustomParameterEnumInt``1(PrtgAPI.TriggerProperty)">
            <summary>
            Retrieve the enum value of a trigger property from this object's <see cref="P:PrtgAPI.Parameters.TriggerParameters.Parameters"/> that has been stored as an integer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="T:PrtgAPI.Parameters.VolumeTriggerParameters">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for adding/modifying <see cref="F:PrtgAPI.TriggerType.Volume"/> <see cref="T:PrtgAPI.NotificationTrigger"/> objects.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.VolumeTriggerParameters.Channel">
            <summary>
            The channel of the sensor this trigger should apply to.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.VolumeTriggerParameters.Period">
            <summary>
            The time component of the volume limit that causes this trigger to activate.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.VolumeTriggerParameters.UnitSize">
            <summary>
            The unit component of the volume limit that causes this trigger to activate.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.VolumeTriggerParameters.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.VolumeTriggerParameters"/> class for creating a new notification trigger.
            </summary>
            <param name="objectId">The object ID the trigger will apply to.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.VolumeTriggerParameters.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.VolumeTriggerParameters"/> class for editing an existing notification trigger.
            </summary>
            <param name="objectId">The object ID the trigger is applied to.</param>
            <param name="triggerId">The sub ID of the trigger on its parent object.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.VolumeTriggerParameters.#ctor(System.Int32,PrtgAPI.NotificationTrigger,PrtgAPI.ModifyAction)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.VolumeTriggerParameters"/> class for creating a new trigger from an existing <see cref="F:PrtgAPI.TriggerType.Volume"/> <see cref="T:PrtgAPI.NotificationTrigger"/>.
            </summary>
            <param name="objectId">The object ID the trigger will apply to.</param>
            <param name="sourceTrigger">The notification trigger whose properties should be used.</param>
            <param name="action">Whether these parameters will create a new trigger or edit an existing one.</param>
        </member>
        <member name="T:PrtgAPI.Parameters.ContentParameters`1">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for retrieving data with a known <see cref="P:PrtgAPI.Parameters.ContentParameters`1.Content"/> type.
            </summary>
            <typeparam name="T">The type of PRTG Object to retrieve.</typeparam>
        </member>
        <member name="F:PrtgAPI.Parameters.ContentParameters`1.MaxTableItems">
            <summary>
            Maximum number of items that can be returned in a single request.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ContentParameters`1.Content">
            <summary>
            The type of content this request will retrieve.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ContentParameters`1.Properties">
            <summary>
            Properties that will be retrieved for each PRTG Object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ContentParameters`1.Count">
            <summary>
            Maximum number of records to return. To retrieve all records in a single request, set this value to a very high number.<para/>
            If this value is less than the total number of records available, additional records can be obtained by requesting the next <see cref="P:PrtgAPI.Parameters.ContentParameters`1.Page"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ContentParameters`1.Start">
            <summary>
            Record number to start at.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ContentParameters`1.Page">
            <summary>
            The page of the response to return. Requests can be split over multiple pages to increase the speed of each individual request.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.ContentParameters`1.#ctor(PrtgAPI.Content)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.ContentParameters`1"/> class.
            </summary>
        </member>
        <member name="T:PrtgAPI.Parameters.CustomParameter">
            <summary>
            Allows inserting custom parameters not supported by PrtgAPI.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.CustomParameter.Name">
            <summary>
            The name of the parameter.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.CustomParameter.Value">
            <summary>
            The value of the parameter.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.CustomParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.CustomParameter"/> class.
            </summary>
            <param name="name">The name of the parameter</param>
            <param name="value">The value of the parameter. The caller is responsible for ensuring the value and type contains the correct capitalization and is formatted corectly when converted <see cref="M:PrtgAPI.Parameters.CustomParameter.ToString"/>.</param>
        </member>
        <member name="M:PrtgAPI.Parameters.CustomParameter.ToString">
            <summary>
            Format this parameter for use in a <see cref="T:PrtgAPI.Request.PrtgUrl"/>.
            </summary>
            <returns>The formatted representation of this parameter.</returns>
        </member>
        <member name="T:PrtgAPI.Parameters.ProbeParameters">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for retrieving <see cref="T:PrtgAPI.Probe"/> objects.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.ProbeParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.ProbeParameters"/> class.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.ProbeParameters.SearchFilter">
            <summary>
            Filter objects to those with a <see cref="T:PrtgAPI.Property"/> of a certain value. Specify multiple filters to limit results further.
            </summary>
        </member>
        <member name="T:PrtgAPI.Parameters.Parameters">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/>.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.Parameters.GetParameters">
            <summary>
            Retrieve the underlying dictionary of parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PrtgAPI.Parameters.Parameters.Item(PrtgAPI.Parameter)">
            <summary>
            Add or update a <see cref="T:PrtgAPI.Parameter"/> for use in a <see cref="T:PrtgAPI.Request.PrtgUrl"/>.
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:PrtgAPI.Parameters.TableParameters`1">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for retrieving data stored in tables.
            </summary>
            <typeparam name="T">The type of PRTG Object to retrieve.</typeparam>
        </member>
        <member name="P:PrtgAPI.Parameters.TableParameters`1.SearchFilter">
            <summary>
            Filter objects to those with a <see cref="T:PrtgAPI.Property"/> of a certain value. Specify multiple filters to limit results further.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.TableParameters`1.SortBy">
            <summary>
            <see cref="T:PrtgAPI.Property"/> to sort response by.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.TableParameters`1.#ctor(PrtgAPI.Content)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.TableParameters`1"/> class.
            </summary>
        </member>
        <member name="T:PrtgAPI.Parameters.DeviceParameters">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for retrieving <see cref="T:PrtgAPI.Device"/> objects.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.DeviceParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.DeviceParameters"/> class.
            </summary>
        </member>
        <member name="T:PrtgAPI.Parameters.GroupParameters">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for retrieving <see cref="T:PrtgAPI.Group"/> objects.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.GroupParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.GroupParameters"/> class.
            </summary>
        </member>
        <member name="T:PrtgAPI.Parameters.SensorParameters">
            <summary>
            Represents parameters used to construct a <see cref="T:PrtgAPI.Request.PrtgUrl"/> for retrieving <see cref="T:PrtgAPI.Sensor"/> objects.
            </summary>
        </member>
        <member name="M:PrtgAPI.Parameters.SensorParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Parameters.SensorParameters"/> class.
            </summary>
        </member>
        <member name="P:PrtgAPI.Parameters.SensorParameters.StatusFilter">
            <summary>
            Filter PRTG Results according to one or more sensor statuses.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.Incomplete.MoveObject">
            <summary>
            <para type="synopsis">Move a device or group within the PRTG Object Tree.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.Incomplete.MoveObject.Device">
            <summary>
            <para type="description">The device to move to another group or probe.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.Incomplete.MoveObject.Group">
            <summary>
            <para type="description">The group to move to another group or probe.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.Incomplete.MoveObject.DestinationId">
            <summary>
            <para type="description">The group or probe to move the object to. This cannot be the Root PRTG Group.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.Incomplete.MoveObject.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.Incomplete.SetObjectPosition">
            <summary>
            <para type="synopsis">Adjust the position of an object within its parent.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.Incomplete.SetObjectPosition.Object">
            <summary>
            <para type="description">The object to move.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.Incomplete.SetObjectPosition.Position">
            <summary>
            <para type="description">Position to move the object to. If this value is higher than the number of items in the parent object,
            this object will be moved to the position closest possible position.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.Incomplete.SetObjectPosition.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.Incomplete.SortPrtgObject">
            <summary>
            <para type="synopsis">Sort the children of a device, group or probe alphabetically.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.Incomplete.SortPrtgObject.Object">
            <summary>
            <para type="description">The device, group or probe whose children should be sorted.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.Incomplete.SortPrtgObject.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.Incomplete.StartAutoDiscovery">
            <summary>
            <para type="synopsis">Auto-discover sensors on a PRTG Device.</para>
            
            <para type="description">The Start-AutoDiscovery cmdlet initiates an auto-discovery task against a PRTG Device.</para>
            <para type="description">When auto-discovery runs, PRTG will attempt to automatically create sensors under the device
            based on a series of built-in templates. If a device is not receptive to a particular sensor type, the sensor is not created.</para>
            <para type="description">Sensors have a built-in flag to indicate whether they were created by auto-discovery. If auto-discovery
            identifies a sensor type that is applicable to your device that already has a copy of that sensor that was created manually,
            auto-discovery will ignore your existing sensor and create a new one alongside it. Because of this, it is always recommended
            to use auto-discovery based sensors to allow for running auto-discovery multiple times without causing duplicates.</para>
            <para type="description">If more than 10 auto-discovery tasks are specified, PRTG will queue the additional tasks
            to limit the load on the system.</para>
            
            <example>
                <code>Get-Device | Start-AutoDiscovery</code>
                <para>Run auto-discovery against all devices.</para>
            </example>
            
            <para type="link">Get-Device</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.Incomplete.StartAutoDiscovery.Device">
            <summary>
            <para type="description">The device to perform auto-discovery upon.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.Incomplete.StartAutoDiscovery.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.CloneDevice">
            <summary>
            <para type="synopsis">Clone a device within PRTG.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.CloneDevice.Device">
            <summary>
            <para type="description">The device to clone.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.CloneDevice.DestinationId">
            <summary>
            <para type="description">The ID of the group or probe the device should be cloned to.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.CloneDevice.Name">
            <summary>
            <para type="description">The name to rename the cloned object to.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.CloneDevice.HostName">
            <summary>
            <para type="description">The hostname or IP Address to set on the cloned device.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.CloneDevice.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.CloneSensor">
            <summary>
            <para type="synopsis">Clone a sensor within PRTG.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.CloneSensor.Sensor">
            <summary>
            <para type="description">The sensor to clone.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.CloneSensor.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.CloneGroup">
            <summary>
            <para type="synopsis">Clone a group within PRTG.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.CloneGroup.Group">
            <summary>
            <para type="description">The group to clone.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.CloneGroup.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.CloneSensorOrGroup">
            <summary>
            Clone a sensor or group within PRTG.
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.CloneSensorOrGroup.DestinationId">
            <summary>
            <para type="description">The ID of the device or group that will hold the cloned object.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.CloneSensorOrGroup.Name">
            <summary>
            <para type="description">The name to rename the cloned object to.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.CloneSensorOrGroup.ProcessRecordEx(System.Int32,System.String)">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
            <param name="objectId">The ID of the object to clone.</param>
            <param name="name">The name of the object to clone. If <see cref="P:PrtgAPI.PowerShell.Cmdlets.CloneSensorOrGroup.Name"/> is not specified, this value will be used.</param>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.AddNotificationTrigger">
            <summary>
            <para type="synopsis">Add a notification trigger to a PRTG Server.</para>
            
            <para type="description">The Add-NotificationTrigger cmdlet adds a new notification  trigger to an object in PRTG. When adding
            a notification trigger, you must first create  a <see cref="T:PrtgAPI.Parameters.TriggerParameters"/>  object that defines the settings to use in
            the trigger. <see cref="T:PrtgAPI.Parameters.TriggerParameters"/>  can be defined from existing notification triggers or created from scratch.
            Certain objects do support certain types of notification triggers (e.g. different types of sensors). Attempting to add a
            notification trigger to an unspecified type will generate an <see cref="T:PrtgAPI.InvalidTriggerTypeException"/>. Notification triggers
            applied to parent objects that are not supported by their children are simply ignored within PRTG, and do not generate exceptions.
            For information on viewing the trigger types supported by an object, see Get-NotificationTriggerTypes</para>
            <para type="description">For more information on creating <see cref="T:PrtgAPI.Parameters.TriggerParameters"/> , see New-NotificationTriggerParameter.</para>
            
            <example>
                <code>C:\> Get-Probe | Get-NotificationTrigger | New-TriggerParameter 2001 | Add-Trigger</code>
                <para>Add all triggers on all probes directly to the object with ID 2001.</para>
            </example>
            
            <para type="link">New-NotificationTriggerParameter</para>
            <para type="link">Set-NotificationTrigger</para>
            <para type="link">Edit-NotificationTriggerProperty</para>
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.SetNotificationTrigger">
            <summary>
            <para type="synopsis">Add or modify a notification trigger on a PRTG Server.</para>
            
            <para type="description">The Set-NotificationTrigger cmdlet updates an existing notification trigger defined on an object in PRTG.
            When editing a notification trigger, you must first create a <see cref="T:PrtgAPI.Parameters.TriggerParameters"/> object that defines the settings you
            wish to modify. <see cref="T:PrtgAPI.Parameters.TriggerParameters"/> can be created from an existing notification trigger or created from scratch.</para>
            <para type="description">For more information on creating <see cref="T:PrtgAPI.Parameters.TriggerParameters"/>, see New-NotificationTriggerParameter</para>
            <para type="description">For information on how to quickly edit a single trigger property, see Edit-NotificationTriggerProperty.</para>
            
            <example>
                <para>C:\> $triggerParams = Get-Probe | Get-Trigger -Type State | New-TriggerParameter</para>
                <para>C:\> $triggerParams.RepeatInterval = 20</para>
                <para>C:\> $triggerParams.OffNotificationAction = $null</para>
                <para>C:\> $triggerParams | Set-NotificationTrigger</para>
                <code/>
                <para>Set the repeat interval of the notification to trigger to every 20 minutes, and remove the off notification action. This example
            assumes there is exactly one probe in the system with exactly one state notification trigger defined on it.</para>
            </example>
            
            <para type="link">New-NotificationTriggerParameter</para>
            <para type="link">Edit-NotificationTriggerProperty</para>
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.BaseSetNotificationTrigger">
            <summary>
            Shared functionality for use in <see cref="T:PrtgAPI.PowerShell.Cmdlets.AddNotificationTrigger"/> and <see cref="T:PrtgAPI.PowerShell.Cmdlets.SetNotificationTrigger"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.BaseSetNotificationTrigger.Parameters">
            <summary>
            <para type="description">The parameters to use to add/modify a <see cref="T:PrtgAPI.NotificationTrigger"/>.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.BaseSetNotificationTrigger.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.EditNotificationTriggerProperty">
            <summary>
            <para type="synopsis">Edit a notification trigger on a PRTG Server.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.EditNotificationTriggerProperty.Trigger">
            <summary>
            <para type="description">Notification Trigger to edit.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.EditNotificationTriggerProperty.Property">
            <summary>
            <para type="description">The property to modify.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.EditNotificationTriggerProperty.Value">
            <summary>
            <para type="description">Value to set the property to.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.EditNotificationTriggerProperty.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.GetNotificationAction">
            <summary>
            <para type="synopsis">Retrieve all Notification Actions from a PRTG Server.</para>
            
            <para type="description">The Get-NotificationAction retrieves notification actions present on a PRTG Server. Notification actions
            can be triggered under various circumstances via notification triggers. For more information on notification triggers, see
            Get-NotificationTrigger.</para>
            
            <example>
                <code>C:\> Get-NotificationTrigger</code>
                <para>Get all notification actions.</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-NotificationTrigger *pager*</code>
                <para>Get all notification actions whose name contains "pager"</para>
            </example>
            
            <para type="link">Get-NotificationTrigger</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetNotificationAction.Name">
            <summary>
            <para type="description">Filter the response to objects with a certain name. Can include wildcards.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetNotificationAction.GetRecords">
            <summary>
            Retrieves all notification actions from a PRTG Server.
            </summary>
            <returns>A list of all notification actions.</returns>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.GetNotificationTriggerTypes">
            <summary>
            <para type="synopsis">Retrieve all notification trigger types supported by a PRTG Object.</para>
            
            <para type="description">The Get-NotificationTriggerTypes cmdlet retrieves a list of all notification trigger
            types supported by a PRTG Object. Certain objects (such as sensors) only support certain types of notification
            triggers depending on what the object is used for (e.g. network traffic sensors vs disk uage sensors).
            Attempting to add a trigger of an unsupported type with Add-NotificationTrigger will generate an
            <see cref="T:PrtgAPI.InvalidTriggerTypeException"/>.</para>
            
            <example>
                <code>Get-Sensor -Id 2001 | Get-NotificationTriggerTypes</code>
                <para>Get all notification trigger types supported by the sensor with object ID 2001.</para>
            </example>
            
            <para type="link">Get-NotificationTrigger</para>
            <para type="link">New-NotificationTriggerParameter</para>
            <para type="link">Add-NotificationTrigger</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetNotificationTriggerTypes.Id">
            <summary>
            <para type="description">The ID of the object to retrieve notification trigger types for.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetNotificationTriggerTypes.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.GetNotificationTrigger">
            <summary>
            <para type="synopsis">Retrieve notification triggers from a PRTG Server.</para>
            
            <para type="description">The Get-NotificationTrigger cmdlet retrieves notification triggers that are defined on a PRTG Object.
            Notification triggers define conditions that when met by a sensor or one of its channels, should result in the firing of a notification
            action. When notification triggers are defined on a device, group, or probe, the triggers are inherited by all nodes under the object.
            Individual objects can choose to block inheritance of notification triggers, preventing those triggers from trickling down.</para>
            <para type="description">When looking at notification triggers defined on a single object, Get-NotificationTrigger can be invoked with no arguments.
            When looking at notification triggers across multiple objects, it is often useful to filter out notification triggers inherited from a parent object via
            the -Inherited parameter.</para>
            <para type="description"><see cref="T:PrtgAPI.NotificationTrigger"/> objects returned from Get-NotificationTrigger can be passed to Edit-NotificationTriggerProperty
            or  New-NotificationTriggerParameter, to allow cloning or editing the trigger's properties.</para>
            
            <example>
                <code>Get-Probe | Get-NotificationTrigger</code>
                <para>Get all notification triggers defined on all probes</para>
                <para/>
            </example>
            <example>
                <code>Get-Device | Get-NotificationTrigger *pager* -Inherited $false</code>
                <para>Get all notification triggers from all devices whose OnNotificationAction action name contains "pager"
            in the name and are not inherited from any parent objects.</para>
                <para/>
            </example>
            <example>
                <code>Get-Probe -Id 2001 | Get-NotificationTrigger -Type State</code>
                <para>Get all State notification triggers from the sensor with ID 2001</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Get-Device</para>
            <para type="link">Get-Group</para>
            <para type="link">Get-Probe</para>
            <para type="link">Add-NotificationTrigger</para>
            <para type="link">New-NotificationTriggerParameter</para>
            <para type="link">Set-NotificationTrigger</para>
            <para type="link">Edit-NotificationTriggerProperty</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetNotificationTrigger.Object">
            <summary>
            <para type="description">The object to retrieve notification triggers for.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetNotificationTrigger.OnNotificationAction">
            <summary>
            <para type="description">Filter the response to objects with a certain OnNotificationAction. Can include wildcards.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetNotificationTrigger.Type">
            <summary>
            <para type="description">Filter the response to objects of a certain type.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetNotificationTrigger.Inherited">
            <summary>
            <para type="description">Indicates whether to include inherited triggers in the response.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetNotificationTrigger.GetRecords">
            <summary>
            Retrieves all notification triggers from a PRTG Server.
            </summary>
            <returns>A list of all notification triggers.</returns>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.NewNotificationTriggerParameter">
            <summary>
            <para type="synopsis">Create a new set of notification trigger parameters for adding or editing a notification trigger.</para>
            
            <para type="description">The New-NotificationTriggerParameter cmdlet creates a set of trigger parameters for creating or editing
            a notification trigger. When editing notification triggers, New-NotificationTriggerParameter should only be used when multiple
            values require updating. For updating a single notification trigger property Edit-NotificationTriggerProperty should be
            used instead.</para>
            <para type="description">When creating a new notification trigger, the trigger's parameters can either be imported
            from an existing notification trigger's properties and then further modified, or defined manually from scratch.</para>
            <para type="description">Based on the type of notification trigger specified, New-NotificationTriggerParameter will
            create one of several TriggerParameter type objects, exposing only the parameters relevant to that trigger type.</para>
            <para type="description">When working with TriggerParameters objects, all parameter properties support nullable values,
            allowing you to clear any properties you wish to remove or undo. The exception to this however is Notification Action
            related properties. When a Notification Action is set to null, it will set the property to the "empty" notification
            action. This allows you to easily clear unwanted notification actions within the PRTG Interface.</para>
            <para type="description">When editing existing notification triggers, all properties on the TriggerParameters object
            will be initially set to null. Specifying a value for a property will highlight to PrtgAPI that that property should
            be updated when the trigger request is executed. While holding a value of null by default, Notification Actions will
            not set themselves with the "empty" notification action unless this value is explicitly specified. Note that
            if you wish to undo modifying a notification action property you have set to null, you will be unable to do so
            without creating a brand new TriggerParameters object.</para>
            
            //todo: need to talk about how setting null on an action removes it
            //todo: i dont think requirevalueattribute is working? when should it work? how do we test creating some corrupt triggers?
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.NewNotificationTriggerParameter.Id">
            <summary>
            <para type="description">The ID of the object the notification trigger will be created for.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.NewNotificationTriggerParameter.Source">
            <summary>
            <para type="description">The notification trigger import trigger parameters from.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.NewNotificationTriggerParameter.TriggerId">
            <summary>
            <para type="description">The Sub ID of the trigger to manipulate.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.NewNotificationTriggerParameter.Type">
            <summary>
            <para type="description">The type of notification trigger to manipulate.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.NewNotificationTriggerParameter.ProcessRecord">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.RemoveNotificationTrigger">
            <summary>
            <para type="synopsis">Remove a notification trigger from a PRTG Object.</para>
            
            <para type="description">The Remove-NotificationTrigger cmdlet removes a notification trigger from a PRTG Object.
            Notification triggers can only be removed from the objects on which they are explicitly defined. Attempting to
            remove a notification trigger from an object which inherits the trigger from its parent will generate an exception.</para>
            <para type="description">If invoked with no arguments other than the notification trigger to be deleted, Remove-NotificationTrigger
            will prompt for confirmation of each trigger to be deleted. If you wish to remove multiple triggers, it is recommended to
            first run Remove-NotificationTrigger with the -WhatIf parameter, and then re-run with the -Force parameter if the results of
            -WhatIf look correct</para>
            <para type="description">When invoked with -WhatIf, Remove-NotificationTrigger will list all notification triggers that would have been removed,
            along with the OnNotificationAction and Sub ID of the notification trigger and the object ID of the object to which the triggers are applied.
            Even if you are sure of the triggers you wish to delete, it is recommended to always run with -WhatIf first to confirm you have specified
            the correct triggers and that PrtgAPI has interpreted your request in the way you intended.</para>
            
            <example>
                <code>C:\> Get-Device dc-1 | Get-NotificationTrigger | Remove-NotificationTrigger -WhatIf</code>
                <para>"What if: Performing operation "Remove-NotificationTrigger" on target "'Email to Administrator' (Object ID: 2002, Sub ID: 1)""</para>
                <para>Preview what will happen when you attempt all triggers from all devices with the name 'dc-1'</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Device dc-1 | Get-NotificationTrigger | Remove-NotificationTrigger -Force</code>
                <para>Remove all notification triggers from devices named 'dc-1' without prompting for confirmation.</para>
            </example>
            
            <para type="link">Get-NotificationTrigger</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.RemoveNotificationTrigger.Trigger">
            <summary>
            <para type="description">Notification trigger to remove.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.RemoveNotificationTrigger.Force">
            <summary>
            <para type="description">Forces a notification trigger to be removed without displaying a confirmation prompt.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.RemoveNotificationTrigger.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.SetObjectProperty">
            <summary>
            <para type="synopsis">Modify the value of an object property.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.SetObjectProperty.Object">
            <summary>
            <para type="description">The object to modify the properties of.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.SetObjectProperty.Property">
            <summary>
            <para type="description">The property to modify.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.SetObjectProperty.Value">
            <summary>
            <para type="description">The value to set for the specified property.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.SetObjectProperty.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.AcknowledgeSensor">
            <summary>
            <para type="synopsis">Mark a <see cref="F:PrtgAPI.SensorStatus.Down"/> sensor as <see cref="F:PrtgAPI.SensorStatus.DownAcknowledged"/>.</para>
            
            <para type="description">The Acknowledge-Sensor cmdlet acknowledges a sensor that is currently in a 'Down' state. When a sensor
            is acknowledged, it no longer generates notification triggers and is moved from the 'Down' sensors page to the 'Down (Acknowledged)'
            sensors page.</para> 
            <para type="description">When acknowledging a sensor, you must specify how long to acknowledge the sensor for. If the sensor is still in a down
            state when the acknowledgement period expires, the sensor will return to a Down state. While in a Down (Acknowledged) state
            PRTG will continue refreshing the sensor according to its scanning interval. If at any time the requisite conditions are met
            for the sensor to enter an 'Up' state, the sensor will turn 'Up' and no further action will be required. If an acknowledged
            sensor that has gone Up fails and returns to a Down state, the sensor will need to be re-acknowledged.</para>
            <para type="description">If a sensor is continually flapping, it may be better to pause the sensor rather than acknowledge it.
            For more information on pausing objects, see Pause-Object.</para>
            
            <example>
                <code>C:\> Get-Sensor -Status Down | Acknowledge-Sensor -Duration 60</code>
                <para>Acknowledge all down sensors for the next 60 minutes</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Sensor -Status Down | Acknowledge-Sensor -Until (Get-Date).AddDays(30) -Message "Honestly, CBF"</code>
                <para>Acknowledge all down sensors for the next 30 days with a message explaining the reason the sensor was acknowledged</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Sensor Ping -Status Down | Acknowledge-Sensor -Forever</code>
                <para>Acknowledge all down ping sensors forever (or until they comes back up by themselves)</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Pause-Object</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.AcknowledgeSensor.Sensor">
            <summary>
            <para type="description">The sensor to acknowledge.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.AcknowledgeSensor.Message">
            <summary>
            <para type="description">A message to display on the object indicating the reason it is acknowledged.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.AcknowledgeSensor.Duration">
            <summary>
            <para type="description">The duration to acknowledge the sensor for, in minutes.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.AcknowledgeSensor.Until">
            <summary>
            <para type="description">The datetime at which the object should become unacknowledged.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.AcknowledgeSensor.Forever">
            <summary>
            <para type="description">Indicates the object should be acknowledged indefinitely.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.AcknowledgeSensor.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.GetChannel">
            <summary>
            <para type="synopsis">Retrieve all channels of a sensor.</para>
            
            <para type="description">The Get-Channel cmdlet retrieves all channels beloninging to a PRTG Sensor.</para>
            <para type="description">Get-Channel uses APIs unsupported by Paessler to retrieve advanced channel settings (limits, thresholds, etc).
            For each channel a separate request must be made in order to retrieve advanced channel details, in addition to a separate single request that retrieves general information for all channels. As such, in order to retrieve information
            on n channels, n+1 requests must be made. Keep this in mind when piping sensors with a large number of channels, or piping a large number of sensors.</para> 
            <para type="description">If a name is specified, Get-Channel filters the results to those that match the name expression.
            Due to limitations of the PRTG API, Get-Channel filters its results post-request.</para>
            <para type="description">Get-Channel does not include the Downtime channel present on all sensors (Channel ID -4) as this sensor does not contain a value in table view.</para>
            
            <example>
                <code>C:\> Get-Sensor -Tags wmicpuloadsensor | Get-Channel</code>
                <para>Get all channels from all Windows CPU Load sensors.</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Sensor -Tags wmimemorysensor | Get-Channel Avail*</code>
                <para>Get all channels whose names start with "Avail" from all Windows Memory sensors.</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Channel -SensorId 2001</code>
                <para>Get all channels from the sensor with ID 2001</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Set-ChannelProperty</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetChannel.Sensor">
            <summary>
            <para type="description">The Sensor to retrieve channels for.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetChannel.SensorId">
            <summary>
            <para type="description">The ID of the Sensor to retrieve channels for.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetChannel.Name">
            <summary>
            <para type="description">Filter the channels retrieved to only those that match a specific name.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetChannel.Id">
            <summary>
            <para type="description">Filter the channels retrieved to only those that match a specific ID.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetChannel.GetRecords">
            <summary>
            Retrieves a list of channels from a PRTG Server.
            </summary>
            <returns>A list of channels.</returns>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.GetGroup">
            <summary>
            <para type="synopsis">Retrieve groups from a PRTG Server.</para>
            
            <para type="description">The Get-Group cmdlet retrieves groups from a PRTG Server. Groups allow you to organize devices and other groups together.
            In addition, the root node of PRTG containing all probes in the system is marked as a group. Get-Group provides a variety of methods of
            filtering the groups requested from PRTG, including by group name, ID and tags, as well as by parent probe/group. Multiple filters can be
            used in conjunction to further limit the number of results returned.</para>
            <para type="description">For scenarios in which you wish to filter on properties not covered by parameters available in Get-Device,
            a custom <see cref="T:PrtgAPI.SearchFilter"/> object can be created by specifying the field name, condition and value to filter upon.
            For more information on properties that can be filtered upon, see New-SearchFilter.</para>
            <para type="description">The <see cref="P:PrtgAPI.PowerShell.Cmdlets.GetGroup.Group"/> objects returned from Get-Group can be piped to a variety of other cmdlets for further processing,
            including Get-Group, Get-Device and Get-Sensor, where the ID or name of the group will be used to filter for child objects of the specified type.</para>
            
            <example>
                <code>C:\> Get-Group Servers</code>
                <para>Get all groups named "Servers" (case insensitive)</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Group *windows*</code>
                <para>Get all groups whose name contains "windows" (case insensitive)</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Group -Id 2005</code>
                <para>Get the group with ID 2005</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Probe contoso | Get-Group</code>
                <para>Get all groups under the probe named "contoso"</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Group -Count 1</code>
                <para>Get only 1 group from PRTG.</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Get-Device</para>
            <para type="link">Get-Probe</para>
            <para type="link">New-SearchFilter</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetGroup.Group">
            <summary>
            <para type="description">The parent group to retrieve groups for.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetGroup.Probe">
            <summary>
            <para type="description">The probe to retrieve groups for.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.PowerShell.Cmdlets.GetGroup"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetGroup.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetGroup.CreateParameters">
            <summary>
            Creates a new parameter object to be used for retrieving groups from a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.GetProbe">
            <summary>
            <para type="synopsis">Retrieve probes from a PRTG Server.</para>
            </summary>
            
            <para type="description">The Get-Probe cmdlet retrieves probes from a PRTG Server. Probes represent sites where the 
            PRTG Probe Service has been installed. Each PRTG Server has a single Core Probe. Additional probes may be installed
            with the PRTG Remote Probe installer for monitoring of remote sites. Get-Probe provides a variety of methods of filtering
            the probes requested from PRTG, including by probe name, ID and tags. Multiple filters can be used in conjunction to further
            limit the number of results returned.</para>
            <para type="description">For scenarios in which you wish to filter on properties not covered by the parameters available
            in Get-Probe, a custom <see cref="T:PrtgAPI.SearchFilter"/> object can be created by specifying the field name, condition and value
            to filter upon. For information on properties that can be filtered upon, see New-SearchFilter</para>
            <para type="description">The <see cref="T:PrtgAPI.Probe"/> objects returned from Get-Probe can be piped to a variety of other cmdlets for
            further processing, including Get-Group, Get-Device and Get-Sensor, where the ID or name of the probe will be used to filter
            for child objects of the specified type.</para>
            
            <example>
                <code>C:\> Get-Probe contoso</code>
                <para>Get all probes named "contoso" (case insensitive)</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Probe *office*</code>
                <para>Get all probes whose name contains "office" (case insensitive)</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Probe -Id 1</code>
                <para>Get the probe with ID 1</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Probe -Count 1</code>
                <para>Get only 1 probe from PRTG.</para>
                <para/>
            </example>
            <example>
                <code>C:\> New-SearchFilter totalsens greaterthan 100 | Get-Probe</code>
                <para>Get all probes that contain more than 100 sensors.</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Get-Device</para>
            <para type="link">Get-Group</para>
            <para type="link">New-SearchFilter</para>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetProbe.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.PowerShell.Cmdlets.GetProbe"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetProbe.CreateParameters">
            <summary>
            Creates a new parameter object to be used for retrieving probes from a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetObjectProperty.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.GetPrtgClient">
            <summary>
            <para type="synopsis">Retrieves the current session's <see cref="T:PrtgAPI.PrtgClient"/></para>
            
            <para type="description">The Get-PrtgClient cmdlet allows you to access the <see cref="T:PrtgAPI.PrtgClient"/> of the current session
            previously created with a call to Connect-PrtgServer. This allows you to view/edit the properties of the <see cref="T:PrtgAPI.PrtgClient"/>
            previously defined in your call to Connect-PrtgServer, as well as access the raw C# PrtgAPI should you wish to bypass or access
            methods not in the PowerShell interface.</para>
            
            <example>
                <code>C:\> Get-PrtgClient</code>
                <para>View the settings of the session's PrtgClient. If the session does not have a PrtgClient, the cmdlet returns null</para>
                <para/>
            </example>
            <example>
                <code>C:\> (Get-PrtgClient).RetryCount = 5</code>
                <para>Change the RetryCount of the PrtgClient to 5</para>
                <para/>
            </example>
            <example>
                <code>C:\> (Get-PrtgClient).GetSensors()</code>
                <para>Invoke the GetSensors method of the PrtgClient</para>
            </example>
            
            <para type="link">Connect-PrtgServer</para>
            <para type="link">Disconnect-PrtgServer</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetPrtgClient.ProcessRecord">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.GetSensorTotals">
            <summary>
            <para type="synopsis">Retrieve the total number of each type of sensor in the system.</para>
            
            <para type="description">The Get-SensorTotals cmdlet retrieves the total number of each type of sensor in a PRTG Server.</para>
            
            <example>
                <code>Get-SensorTotals</code>
                <para>Count the number of sensors in the system.</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetSensorTotals.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.RefreshObject">
            <summary>
            <para type="synopsis">Request an object and any if its children refresh themselves immediately.</para>
            
            <para type="description">The Refresh-Object cmdlet causes an object to refresh itself. Sensor objects automatically
            refresh according to their Scanning Interval. Refresh-Object allows you to bypass this interval and request
            the sensor update immediately. If Refresh-Object is applied to a Device, Group or Probe, all sensors under
            that object will be refreshed.</para>
            <para>Sensor Factory sensors do not support being manually refreshed.</para>
            
            <example>
                <code>Get-Sensor -Id 2001 | Refresh-Object</code>
                <para>Refresh the sensor with object ID 2001.</para>
                <para/>
            </example>
            <example>
                <code>Get-Device -Id 2000 | Refresh-Object</code>
                <para>Refresh all sensors under the device with ID 2000.</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Get-Device</para>
            <para type="link">Get-Group</para>
            <para type="link">Get-Probe</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.RefreshObject.Object">
            <summary>
            <para type="description">The object to refresh.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.RefreshObject.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.PauseObject">
            <summary>
            <para type="synopsis">Disable monitoring on an object.</para>
            
            <para type="description">The Pause-Object cmdlet disables monitoring of an object in PRTG. When an object is paused, all children
            of the object are paused as well. Child objects can be independently paused and unpaused while their parent is paused,
            however their states will not modify as long as their parent is overriding them.</para>
            <para type="description">When pausing an object, you must specify how long to pause the object for. While in a paused state
            PRTG will not attempt to execute any sensor objects covered by the paused object.</para>
            <para>Objects that have not been paused forever will be automatically unpaused when their pause duration expires. For information
            on how to unpause an object manually, see Resume-Object.</para>
            
            <example>
                <code>C:\> Get-Sensor -Id 2001 | Pause-Object -Duration 60</code>
                <para>Pause the object with ID 2001 for 60 minutes.</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Probe *chicago* | Pause-Object -Until (Get-Date).AddDays(2) -Message "Office move in progress"</code>
                <para>Pause all probes whose names contain "chicago" for three days with a message explaining the reason the object was paused.</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Device fw-1 | Pause-Object -Forever -Message "Decomissioning"</code>
                <para>Pause all devices named "fw-1" forever with a message explaining the reason the object was paused.</para>
            </example>
            
            <para type="link">Resume-Object</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.PauseObject.Object">
            <summary>
            <para type="description">The object to pause.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.PauseObject.Message">
            <summary>
            <para type="description">A message to display on the object indicating the reason it is paused.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.PauseObject.Duration">
            <summary>
            <para type="description">The duration to pause the object for, in minutes.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.PauseObject.Until">
            <summary>
            <para type="description">The datetime at which the object should be unpaused.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.PauseObject.Forever">
            <summary>
            <para type="description">Indicates the object should be paused indefinitely.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.PauseObject.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.RenameObject">
            <summary>
            <para type="synopsis">Rename a PRTG object.</para> //todo: talk about whatif and force. but we dont even have those?
            
            <example>
                <code>Get-Sensor Memory | Rename-Object "Memory Free"</code>
                <para>Rename all objects named "Memory" (case insensitive) to "Memory Free"</para>
                <para/>
            </example>
            <example>
                <code>Get-Sensor Memory | Rename-Object "Memory Free" -WhatIf</code>
                <para>What if: Performing the operation "Rename-Object" on target "'Memory' (ID: 2001)"</para>
                <para>Preview what will happen when you attempt to rename all objects named "Memory"</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Get-Device</para>
            <para type="link">Get-Group</para>
            <para type="link">Get-Probe</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.RenameObject.Object">
            <summary>
            <para type="description">The object to rename.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.RenameObject.Name">
            <summary>
            <para type="description">The new name to give the object.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.RenameObject.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.ResumeObject">
            <summary>
            <para type="synopsis">Resume an object from a paused or simulated error state.</para>
            
            <para type="description">The Resume-Object cmdlet resumes monitoring an object that has previously been interrupted
            due to manually pausing or simulating an error state on the object.</para>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Get-Device</para>
            <para type="link">Get-Group</para>
            <para type="link">Get-Probe</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.ResumeObject.Object">
            <summary>
            <para type="description">The object to resume.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.ResumeObject.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.SetChannelProperty">
            <summary>
            <para type="synopsis">Modify the value of a channel property.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.SetChannelProperty.Channel">
            <summary>
            <para type="description">Channel to set the properties of.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.SetChannelProperty.SensorId">
            <summary>
            <para type="description">ID of the channel's parent sensor.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.SetChannelProperty.ChannelId">
            <summary>
            <para type="description">ID of the channel to set the properties of.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.SetChannelProperty.Property">
            <summary>
            <para type="description">Property of the channel to set.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.SetChannelProperty.Value">
            <summary>
            <para type="description">Value to set the property to.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.SetChannelProperty.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.RemoveObject">
            <summary>
            <para type="synopsis">Permanently remove an object from PRTG.</para>
            
            <para type="description">The Remove-Object cmdlet permanently removes an object from PRTG. Some objects cannot be deleted
            (e.g. the root PRTG group (ID 0) and will generate an exception if you attempt to do so.</para>
            <para type="description">If invoked with no arguments other than the object to be deleted, Remove-Object will prompt for
            confirmation of each object to be deleted. If you wish to delete multiple objects, it is recommend to first run
            Remove-Object with the -WhatIf parameter, and then re-run with the -Force parameter if the results of -WhatIf look correct.</para>
            <para type="description">When invoked with -WhatIf, Remove-Object will list all objects that would have been deleted,
            along with their corresponding object IDs. Even if you are sure of the objects you wish to delete,
            it is recommended to always run with -WhatIf first to confirm you have specified the correct objects
            and that PrtgAPI has interpreted your request in the way you intended.</para>
            
            <example>
                <code>C:\> Get-Device dc-1 | Remove-Object -WhatIf</code>
                <para>"What if: Performing the operation "Remove-Object" on target "'dc-1' (ID: 2001)""</para>
                <para>Preview what will happen when you attempt to remove all devices named 'dc-1'</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Device dc-1 | Remove-Object -Force</code>
                <para>Remove all devices with name 'dc-1' without prompting for confirmation.</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Get-Device</para>
            <para type="link">Get-Group</para>
            <para type="link">Get-Probe</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.RemoveObject.Object">
            <summary>
            <para type="description">The object to remove.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.RemoveObject.Force">
            <summary>
            <para type="description">Forces an object to be removed without displaying a confirmation prompt.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.RemoveObject.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.GetDevice">
            <summary>
            <para type="synopsis">Retrieve devices from a PRTG Server.</para>
            
            <para type="description">The Get-Device cmdlet retrieves devices from a PRTG Server. Devices hold sensors used to monitor a particular system.
            Get-Device provides a variety of methods of filtering the devices requested from PRTG, including by device name, ID and tags, as well as parent probe/group.
            Multiple filters can be used in conjunction to futher limit the number of results returned.</para>
            <para type="description">For scenarios in which you wish to filter on properties not covered by parameters available in Get-Device, a custom <see cref="T:PrtgAPI.SearchFilter"/>
            object can be created by specifying the field name, condition and value to filter upon. For information on properties that can be filtered upon,
            see New-SearchFilter.</para>
            <para type="description">The <see cref="T:PrtgAPI.Device"/> objects returned from Get-Device can be piped to a variety of other cmdlets for further processing, including Get-Sensor,
            wherein the ID of each device will be used to filter for its parent sensors.</para>
            
            <example>
                <code>C:\> Get-Device dc-1</code>
                <para>C:\> Get all devices named "dc-1" (case insensitive)</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Device *exch*</code>
                <para>C:\> Get all devices whose name contains "exch" (case insensitive)</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Device -Id 2000</code>
                <para>Get the device with ID 2000</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Probe contoso | Get-Device</code>
                <para>Get all devices from the probe named "contoso"</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Device -Tags C_OS_Win</code>
                <para>Get all devices that have the tag "C_OS_Win"</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Device -Count 1</code>
                <para>Get only 1 device from PRTG.</para>
                <para/>
            </example>
            <example>
                <code>New-SearchFilter location contains "new york" | Get-Device</code>
                <para>Get all devices whose location contains "new york"</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Get-Group</para>
            <para type="link">Get-Probe</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetDevice.Group">
            <summary>
            <para type="description">The group to retrieve devices for.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetDevice.Probe">
            <summary>
            <para type="description">The probe to retrieve devices for.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.PowerShell.Cmdlets.GetDevice"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetDevice.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetDevice.CreateParameters">
            <summary>
            Creates a new parameter object to be used for retrieving devices from a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.ConnectPrtgServer">
            <summary>
            <para type="synopsis">Initializes a new instance of a <see cref="T:PrtgAPI.PrtgClient"/>. This cmdlet must be called at least once before attempting to use any other cmdlets.</para>
            
            <para type="description">The Connect-PrtgServer cmdlet establishes a new connection to a PRTG Server. As PRTG uses a stateless REST API,
            Connect-PrtgServer initializes a <see cref="T:PrtgAPI.PrtgClient"/> which stores the settings that will be used when generating each request.</para>
            <para type="description">PRTG supports two authentication methods: username/password and username/passhash. A PassHash is a numeric
            password generated by PRTG that can be used in place of your regular password. When your <see cref="T:PrtgAPI.PrtgClient"/> is initialized,
            if you have specified a password PrtgAPI will automatically retrieve your account's PassHash for use in all future requests.</para>
            <para type="description">By default when PRTG times out while processing a request PrtgAPI will throw an exception. This can be
            quite problematic when attempting to batch process a large number of items with PrtgAPI in PowerShell. You can request
            PrtgAPI automatically attempt to retry failed requests by specifying the -RetryCount and -RetryDelay parameters.
            If -RetryCount is greater than 0, PrtgAPI will send a warning to the pipeline indicating a failure has occurred,
            as well as the number of retries remaining before PrtgAPI gives up. Each request invocation uses a separate retry count.</para>
            <para>If a protocol is not specified, PrtgAPI will connect with HTTPS. If your PRTG Server is HTTP only, this will cause an exception.
            For HTTP only servers, prefix your URL with http://</para>
            <para type="description">Attempting to invoke Connect-PrtgServer after a <see cref="T:PrtgAPI.PrtgClient"/> has already been initialized
            for the current session will generate an exception. To override the existing <see cref="T:PrtgAPI.PrtgClient"/>, specify the -Force
            parameter to Connect-PrtgServer, or invalidate the <see cref="T:PrtgAPI.PrtgClient"/> by calling Disconnect-PrtgServer.</para>
            <para type="description">For information on viewing and editing the session's <see cref="T:PrtgAPI.PrtgClient"/> settings see Get-PrtgClient.</para> 
            
            <example>
                <code>C:\> Connect-PrtgServer prtg.example.com</code>
                <para>Connect to a PRTG Server. You will receive a login prompt requesting you enter your credentials.</para>
                <para/>
            </example>
            <example>
                <code>C:\> Connect-PrtgServer prtg.example.com (New-Credential prtgadmin prtgadmin)</code>
                <para>Connect to a PRTG Server specifying your credentials as part of the command. The New-Credential cmdlet can be used
            when developing scripts to avoid a login prompt.</para>
                <para/>
            </example>
            <example>
                <code>C:\> Connect-PrtgServer prtg.example2.com -Force</code>
                <para>Connect to a PRTG Server, overriding the session's existing PrtgClient (if applicable)</para>
                <para/>
            </example>
            <example>
                <code>C:\> Connect-PrtgServer http://prtg.example.com</code>
                <para>Connect to a PRTG Server using HTTP. http:// must be specified for servers that do not accept HTTPS.</para>
                <para/>
            </example>
            <example>
                <code>C:\> Connect-PrtgServer prtg.example.com -RetryCount 3 -RetryDelay 5</code>
                <para>Connect to a PRTG Server, indicating that any requests that fail during the use of the PrtgClient should be attempted
            at most 3 times, with a delay of 5 seconds between each attempt.</para>
            </example>
            
            <para type="link">Get-PrtgClient</para>
            <para type="link">Disconnect-PrtgServer</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.ConnectPrtgServer.Server">
            <summary>
            <para type="description">Specifies the PRTG Server requests will be made against.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.ConnectPrtgServer.Credential">
            <summary>
            <para type="description">Specifies the username and password to authenticate with. If <see cref="P:PrtgAPI.PowerShell.Cmdlets.ConnectPrtgServer.PassHash"/> is specified, the password will be treated as a PassHash instead.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.ConnectPrtgServer.Force">
            <summary>
            <para type="description">Forces a <see cref="T:PrtgAPI.PrtgClient"/> to be replaced if one already exists.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.ConnectPrtgServer.PassHash">
            <summary>
            <para type="description">Specifies that the <see cref="P:PrtgAPI.PowerShell.Cmdlets.ConnectPrtgServer.Credential"/>'s password contains a PassHash instead of a Password.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.ConnectPrtgServer.RetryCount">
            <summary>
            <para type="description">The number of times to retry a request that times out while communicating with PRTG.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.ConnectPrtgServer.RetryDelay">
            <summary>
            <para type="description">The base delay (in seconds) between retrying a timed out request. Each successive failure of a given request will wait an additional multiple of this value.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.ConnectPrtgServer.ProcessRecord">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.DisconnectPrtgServer">
            <summary>
            <para type="synopsis">Invalidates a <see cref="T:PrtgAPI.PrtgClient"/> previously created with Connect-PrtgServer.</para>
            
            <para type="description">The Disconnect-PrtgServer cmdlet invalidates a PrtgClient previously created
            with Connect-PrtgServer. As PRTG uses a stateless REST API, it is not necessary to call
            Disconnect-PrtgServer when you have finished making requests unless you are developing a script,
            in which case Connect-PrtgServer will fail to create a PrtgClient if a PRTG connection is already active
            in the current session. This can be circumvented by specifying the -Force parameter when establishing
            the connection. For more information, see Connect-PrtgServer.</para>
            <para type="description">If Disconnect-PrtgServer is called when you are not connected to a PRTG Server, this cmdlet does nothing.</para>
            
            <example>
                <code>C:\> Disconnect-PrtgServer</code>
                <para>Disconnect from the current PRTG Server</para>
            </example>
            
            <para type="link">Connect-PrtgServer</para>
            <para type="link">Get-PrtgClient</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.DisconnectPrtgServer.ProcessRecord">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.GetSensor">
            <summary>
            <para type="synopsis">Retrieve sensors from a PRTG Server.</para>
            
            <para type="description">The Get-Sensor cmdlet retrieves sensors from a PRTG Server. Sensors are the fundamental unit of monitoring
            in PRTG, and the most populous type of object in the system by far. Get-Sensor provides a variety of methods of filtering the sensors
            requested from PRTG, including by sensor name, ID, status and tags as well as parent probe/group/device. Multiple filters
            can be used in conjunction to further limit the number of results returned.</para>
            <para type="description">For scenarios in which you wish to filter on properties not covered by parameters available in Get-Sensor,
            a custom <see cref="T:PrtgAPI.SearchFilter"/> object can be created specifying the field name, condition and value to filter upon. For information
            on properties that can be filtered on, see New-SearchFilter. When searching for Sensor Factory objects, please note that these
            objects do not respond to server side filters by "type". To filter for Sensor Factory sensors, filter by the tag "factorysensor".</para>
            <para type="description">When invoked with no arguments, Get-Sensor will query the number of sensors present on your PRTG Server.
            If PrtgAPI detects the number is about a specified threshold, PrtgAPI will split the request up into several smaller requests
            which will each be invoked in parallel. Results will then be "streamed" to the pipeline in the order they arrive. A progress
            bar will also be visible up the top indicating the total number of sensors retrieved/remaining.</para>
            <para type="description">If you attempt to cancel a large request (Ctrl+C) and immediately issue another request (of any size),
            PRTG may fail to immediately respond until it has finished processing the request you initially issued. Please keep this in mind
            when dealing with systems with an extreme number of sensors (>10,000).</para>
            <para type="description">The <see cref="T:PrtgAPI.Sensor"/> objects returned from Get-Sensor can be piped to a variety of other cmdlets for further
            processing, including Get-Channel, wherein the ID of the sensor will be used to acquire its underlying channels.</para>
            
            <example>
                <code>C:\> Get-Sensor Ping</code>
                <para>Get all sensors named "Ping" (case insensitive)</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Sensor *cpu*</code>
                <para>Get all sensors whose name contains "cpu" (case insensitive)</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Sensor -Id 2001</code>
                <para>Get the sensor with ID 2001</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Sensor -Status Down</code>
                <para>Get all sensors in a "Down" status.</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Device *fw* | Get-Sensor Ping</code>
                <para>Get all sensors named "Ping" (case insensitive) from all devices whose name contains "fw"</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Sensor -Tags wmimemorysensor</code>
                <para>Get all sensors that have the tag "wmimemorysensor"</para>
                <para/>
            </example>
            <example>
                <code>C:\> Get-Sensor -Count 1</code>
                <para>Get only 1 sensor from PRTG.</para>
                <para/>
            </example>
            <example>
                <code>C:\> New-SearchFilter type contains deprecated | Get-Sensor</code>
                <para>Get all deprecated sensors.</para>
            </example>
            
            <para type="link">Get-Device</para>
            <para type="link">Get-Group</para>
            <para type="link">Get-Probe</para>
            <para type="link">Get-Channel</para>
            <para type="link">New-SearchFilter</para> 
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetSensor.Device">
            <summary>
            <para type="description">The device to retrieve sensors for.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetSensor.Probe">
            <summary>
            <para type="description">The probe to retrieve sensors for.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetSensor.Group">
            <summary>
            <para type="description">The group to retrieve sensors for.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.GetSensor.Status">
            <summary>
            <para type="description">Only retrieve sensors that match a specific status.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetSensor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.PowerShell.Cmdlets.GetSensor"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetSensor.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.GetSensor.CreateParameters">
            <summary>
            Creates a new parameter object to be used for retrieving sensors from a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PrtgAPI.PowerShell.Cmdlets.NewSearchFilter">
            <summary>
            <para type="synopsis">Filters results on the PRTG Server to improve performance.</para>
            
            <para type="description">The New-SearchFilter cmdlet allows you to filter the results returned by a cmdlet by a custom property.
            Each object returned from New-SearchFilter defines a single filter rule. Multiple filters can often be passed to compatible
            cmdlets to filter on multiple values.</para>
            <para type="description">To view all properties that can be filtered on for on objects, see the SYNTAX or PARAMETERS section of this cmdlet's help page.</para> 
            
            <example>
                <code>C:\> New-SearchFilter type contains deprecated | Get-Sensor</code>
                <para>Get all sensors whose type "deprecated"</para>
            </example>
            
            <para type="link">Get-Sensor</para>
            <para type="link">Get-Device</para>
            <para type="link">Get-Group</para>
            <para type="link">Get-Probe</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.NewSearchFilter.Property">
            <summary>
            <para type="description">Object property to filter on.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.NewSearchFilter.Operator">
            <summary>
            <para type="description">Operator to filter with.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Cmdlets.NewSearchFilter.Value">
            <summary>
            <para type="description">Value to filter for.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Cmdlets.NewSearchFilter.ProcessRecord">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="T:PrtgAPI.PowerShell.Base.PrtgObjectCmdlet`1">
            <summary>
            Base class for all cmdlets that return a list of objects.
            </summary>
            <typeparam name="T">The type of objects that will be retrieved.</typeparam>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgObjectCmdlet`1.GetRecords">
            <summary>
            Retrieves all records of a specified type from a PRTG Server. Implementors can call different methods of a <see cref="T:PrtgAPI.PrtgClient"/> based on the type they wish to retrieve.
            </summary>
            <returns>A list of records relevant to the caller.</returns>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgObjectCmdlet`1.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgObjectCmdlet`1.FilterResponseRecords(System.Collections.Generic.IEnumerable{`0},System.String,System.Func{`0,System.String})">
            <summary>
            Filter a response with a wildcard expression on a specified property.
            </summary>
            <param name="records">The records to filter.</param>
            <param name="pattern">The wildcard expression to filter with.</param>
            <param name="getProperty">A function that yields the property to filter on.</param>
            <returns>A list of records that match the specified filter.</returns>
        </member>
        <member name="T:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2">
            <summary>
            Base class for all cmdlets that return advanced objects found in tables (sensors, devices, probes, etc)
            </summary>
            <typeparam name="TObject">The type of objects that will be retrieved.</typeparam>
            <typeparam name="TParam">The type of parameters to use to retrieve objects</typeparam>
        </member>
        <member name="P:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.Name">
            <summary>
            <para type="description">Filter the response to objects with a certain name. Can include wildcards.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.Id">
            <summary>
            <para type="description">Retrieve an object with a specified ID.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.Filter">
            <summary>
            <para type="description">Filter the response to objects that match one or more criteria.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.Tags">
            <summary>
            <para type="description">Filter the response to objects with certain tags. Can include wildcards.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.Count">
            <summary>
            <para type="description">Maximum number of results to return.</para>
            </summary>
        </member>
        <member name="F:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.content">
            <summary>
            The type of content this cmdlet will retrieve.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.#ctor(PrtgAPI.Content,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2"/> class. 
            </summary>
            <param name="content">The type of content this cmdlet will retrieve.</param>
            <param name="progressThreshold">The numeric threshold at which this cmdlet should show a progress bar when retrieving results.</param>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.AddPipelineFilter(PrtgAPI.Property,System.Object)">
            <summary>
            Adds a filter for a concrete value that came in from the pipeline (such as an Id)
            </summary>
            <param name="property">The property to filter on.</param>
            <param name="value">The value to filter for.</param>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.AddWildcardFilter(PrtgAPI.Property,System.String)">
            <summary>
            Add a filter for a value that may contain wildcard characters.
            </summary>
            <param name="property">The property to filter on.</param>
            <param name="value">The value to filter for.</param>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.CreateParameters">
            <summary>
            Creates a new parameter object capable of being passed to <see cref="M:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.GetObjects(`1)"/> 
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgTableCmdlet`2.GetRecords">
            <summary>
            Retrieves all records of a specified type from a PRTG Server using the types default parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PrtgAPI.PowerShell.Base.PrtgCmdlet">
            <summary>
            Base class for all cmdlets requiring authenticated access to a PRTG Server.
            </summary>
        </member>
        <member name="P:PrtgAPI.PowerShell.Base.PrtgCmdlet.client">
            <summary>
            Provides access to the <see cref="T:PrtgAPI.PrtgClient"/> stored in the current PowerShell Session State.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgCmdlet.BeginProcessing">
            <summary>
            Provides a one-time, preprocessing functionality for the cmdlet.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgCmdlet.ProcessRecordEx">
            <summary>
            Performs record-by-record processing functionality for the cmdlet.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgCmdlet.ProcessRecord">
            <summary>
            Performs record-by-record processing for the cmdlet. Do not override this method; override <see cref="M:PrtgAPI.PowerShell.Base.PrtgCmdlet.ProcessRecordEx"/> instead. 
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgCmdlet.EndProcessing">
            <summary>
            Performs one-time, post-processing functionality for the cmdlet. This function is only run when the cmdlet successfully runs to completion.
            </summary>
        </member>
        <member name="M:PrtgAPI.PowerShell.Base.PrtgCmdlet.WriteList``1(System.Collections.Generic.IEnumerable{``0},PrtgAPI.PowerShell.ProgressSettings)">
            <summary>
            Writes a list to the output pipeline.
            </summary>
            <typeparam name="T">The type of the list that will be output.</typeparam>
            <param name="sendToPipeline">The list that will be output to the pipeline.</param>
            <param name="settings">How progress should be displayed while the list is being enumerated.</param>
        </member>
        <member name="T:PrtgAPI.Attributes.PropertyParameterAttribute">
            <summary>
            Specifies a property for use as the name or value of a URL parameter/query string.
            </summary>
        </member>
        <member name="T:PrtgAPI.TriggerChannel">
            <summary>
            Specifies the sensor channels a notification trigger can monitor.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerChannel.Primary">
            <summary>
            The primary channel.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerChannel.Total">
            <summary>
            The "Total" channel (where applicable)
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerChannel.TrafficIn">
            <summary>
            The "TrafficIn" channel (where applicable)
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerChannel.TrafficOut">
            <summary>
            The "TrafficOut" channel (where applicable)
            </summary>
        </member>
        <member name="T:PrtgAPI.TriggerCondition">
            <summary>
            Specifies threshold conditions to be used in notification triggers.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerCondition.Above">
            <summary>
            Trigger when sensor's value is above the threshold.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerCondition.Below">
            <summary>
            Trigger when the sensor's value is below the threshold.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerCondition.Equals">
            <summary>
            Trigger when the sensor's value is equal to the threshold.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerCondition.NotEquals">
            <summary>
            Trigger when the sensor's value is not equal to the threshold.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerCondition.Change">
            <summary>
            Trigger whenever the sensor's value changes. For use in <see cref="F:PrtgAPI.TriggerType.Change"/> triggers only.
            </summary>
        </member>
        <member name="T:PrtgAPI.TriggerPeriod">
            <summary>
            Specifies the time period for <see cref="F:PrtgAPI.TriggerType.Volume"/> triggers.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerPeriod.Hour">
            <summary>
            Trigger when a volume limit is reached per hour.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerPeriod.Day">
            <summary>
            Trigger when a volume limit is reached per day.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerPeriod.Week">
            <summary>
            Trigger when a volume limit is reached per week.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerPeriod.Month">
            <summary>
            Trigger when a volume limit is reached per month.
            </summary>
        </member>
        <member name="T:PrtgAPI.TriggerUnitTime">
            <summary>
            Specifies data transfer time components for <see cref="F:PrtgAPI.TriggerType.Speed"/> notification triggers. 
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitTime.Sec">
            <summary>
            Seconds
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitTime.Min">
            <summary>
            Minutes
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitTime.Hour">
            <summary>
            Hours
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitTime.Day">
            <summary>
            Days
            </summary>
        </member>
        <member name="T:PrtgAPI.TriggerType">
            <summary>
            <para type="description">Specifies types of notification triggers that can be defined on objects.</para>
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerType.State">
            <summary>
            Trigger when an object changes state.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerType.Speed">
            <summary>
            Trigger when a channel reaches a certain speed.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerType.Volume">
            <summary>
            Trigger when a channel processes a certain volume of data over a given time frame.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerType.Threshold">
            <summary>
            Trigger when a channel reaches a certain value.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerType.Change">
            <summary>
            Trigger whenever an object changes.
            </summary>
        </member>
        <member name="T:PrtgAPI.TriggerUnitSize">
            <summary>
            Specifies unit sizes to be used in notification triggers.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitSize.Bit">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitSize.Kbit">
            <summary>
            Kilobits
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitSize.Mbit">
            <summary>
            Megabits
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitSize.Gbit">
            <summary>
            Gigabits
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitSize.Tbit">
            <summary>
            Terabits
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitSize.Byte">
            <summary>
            Bytes
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitSize.KByte">
            <summary>
            Kilobytes
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitSize.MByte">
            <summary>
            Megabytes
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitSize.GByte">
            <summary>
            Gigabytes
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerUnitSize.TByte">
            <summary>
            Terabytes
            </summary>
        </member>
        <member name="T:PrtgAPI.ModifyAction">
            <summary>
            Specifies ways in which an object can be modified.
            </summary>
        </member>
        <member name="F:PrtgAPI.ModifyAction.Add">
            <summary>
            Add a new object.
            </summary>
        </member>
        <member name="F:PrtgAPI.ModifyAction.Edit">
            <summary>
            Edit an existing object.
            </summary>
        </member>
        <member name="T:PrtgAPI.ObjectProperty">
            <summary>
            <para type="description">Specifies the settings of objects that can be interfaced with using the PRTG HTTP API.</para>
            </summary>
        </member>
        <member name="F:PrtgAPI.ObjectProperty.InheritScanningInterval">
            <summary>
            Whether to inherit this object's scanning interval settings from its parent.
            </summary>
        </member>
        <member name="F:PrtgAPI.ObjectProperty.ScanningInterval">
            <summary>
            The <see cref="T:PrtgAPI.ScanningInterval"/> with which an object refreshes its data.
            </summary>
        </member>
        <member name="F:PrtgAPI.ObjectProperty.ErrorIntervalDown">
            <summary>
            The <see cref="T:PrtgAPI.ErrorIntervalDown"/> indicating the number of scanning intervals to wait before setting a sensor to <see cref="F:PrtgAPI.SensorStatus.Down"/> when an error is reported.
            </summary>
        </member>
        <member name="T:PrtgAPI.TriggerProperty">
            <summary>
            <para type="description">Specifies properties that can be modified on notification triggers.</para>
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.State">
            <summary>
            The state that causes the trigger to activate.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.Latency">
            <summary>
            The delay (in seconds) before the <see cref="F:PrtgAPI.TriggerProperty.OnNotificationAction"/> executes after the trigger has activated. 
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.OnNotificationAction">
            <summary>
            The notification action to execute when the trigger has activated.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.OffNotificationAction">
            <summary>
            The notification action to execute when the trigger has deactivated.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.EscalationNotificationAction">
            <summary>
            The notification action to execute when the trigger continues to remain activated for an extended period of time.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.EscalationLatency">
            <summary>
            The delay (in seconds) before the <see cref="F:PrtgAPI.TriggerProperty.EscalationNotificationAction"/> executes after the trigger has activated.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.RepeatInterval">
            <summary>
            The delay (in minutes) before the <see cref="F:PrtgAPI.TriggerProperty.EscalationNotificationAction"/> should be re-executed. 
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.Channel">
            <summary>
            The channel the trigger should apply to.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.Period">
            <summary>
            The time period over which the <see cref="F:PrtgAPI.TriggerProperty.Threshold"/> volume is analyzed. Used in conjunction with <see cref="F:PrtgAPI.TriggerProperty.UnitSize"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.UnitSize">
            <summary>
            The unit component of the data rate that causes this trigger to activate. Used in conjunction with <see cref="F:PrtgAPI.TriggerProperty.Period"/> or <see cref="F:PrtgAPI.TriggerProperty.UnitTime"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.Condition">
            <summary>
            The condition that must be true for the trigger to activate. Used in conjunction with <see cref="F:PrtgAPI.TriggerProperty.Threshold"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.Threshold">
            <summary>
            The threshold that must be reached for the trigger to activate. Used in conjunction with <see cref="F:PrtgAPI.TriggerProperty.Condition"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerProperty.UnitTime">
            <summary>
            The time component of the data rate that causes this trigger to activate. Used in conjunction with <see cref="F:PrtgAPI.TriggerProperty.UnitSize"/>.
            </summary>
        </member>
        <member name="T:PrtgAPI.TriggerSensorState">
            <summary>
            Specifies sensor statuses that can cause a trigger to activate.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerSensorState.Down">
            <summary>
            Trigger when the sensor is <see cref="F:PrtgAPI.SensorStatus.Down"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerSensorState.Warning">
            <summary>
            Trigger when the sensor is <see cref="F:PrtgAPI.SensorStatus.Warning"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerSensorState.Unusual">
            <summary>
            Trigger when the sensor is <see cref="F:PrtgAPI.SensorStatus.Unusual"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerSensorState.PartialDown">
            <summary>
            Trigger when the sensor is <see cref="F:PrtgAPI.SensorStatus.DownPartial"/>.
            </summary>
        </member>
        <member name="T:PrtgAPI.TriggerVolumeUnitSize">
            <summary>
            Specifies unit sizes to be used in <see cref="F:PrtgAPI.TriggerType.Volume"/> notification triggers.
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerVolumeUnitSize.Byte">
            <summary>
            Bytes
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerVolumeUnitSize.KByte">
            <summary>
            Kilobytes
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerVolumeUnitSize.MByte">
            <summary>
            Megabytes
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerVolumeUnitSize.GByte">
            <summary>
            Gigabytes
            </summary>
        </member>
        <member name="F:PrtgAPI.TriggerVolumeUnitSize.TByte">
            <summary>
            Terabytes
            </summary>
        </member>
        <member name="T:PrtgAPI.RetryRequestEventArgs">
            <summary>
            The arguments passed to an event handler when a web request is retried.
            </summary>
        </member>
        <member name="P:PrtgAPI.RetryRequestEventArgs.Exception">
            <summary>
            The exception that caused the request to fail.
            </summary>
        </member>
        <member name="P:PrtgAPI.RetryRequestEventArgs.Url">
            <summary>
            The URL of the request that failed.
            </summary>
        </member>
        <member name="P:PrtgAPI.RetryRequestEventArgs.RetriesRemaining">
            <summary>
            The number of retries remaining for the current request.
            </summary>
        </member>
        <member name="M:PrtgAPI.RetryRequestEventArgs.#ctor(System.Exception,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.RetryRequestEventArgs"/> class.
            </summary>
            <param name="ex">The exception that caused the request to fail.</param>
            <param name="url">The URL of the request that failed.</param>
            <param name="retriesRemaining">The number of retries remaining.</param>
        </member>
        <member name="T:PrtgAPI.InvalidTriggerTypeException">
            <summary>
            The exception that is thrown when a trigger of an incompatible type is added to an object.
            </summary>
        </member>
        <member name="M:PrtgAPI.InvalidTriggerTypeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.InvalidTriggerTypeException"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.InvalidTriggerTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.InvalidTriggerTypeException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:PrtgAPI.InvalidTriggerTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.InvalidTriggerTypeException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:PrtgAPI.InvalidTriggerTypeException.#ctor(System.Int32,PrtgAPI.TriggerType,System.Collections.Generic.List{PrtgAPI.TriggerType})">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.InvalidTriggerTypeException"/> class with a specified Object ID, the type of trigger that is invalid and a list of valid trigger types.
            </summary>
            <param name="objectId">The ID of the object the trigger attempted to be applied to.</param>
            <param name="type">The type of trigger that is not valid for the object.</param>
            <param name="validTypes">The types of triggers that are valid for the object.</param>
        </member>
        <member name="M:PrtgAPI.InvalidTriggerTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.InvalidTriggerTypeException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:PrtgAPI.InvalidTypeException">
            <summary>
            The exception that is thrown when a type is not valid for a specified context.
            </summary>
        </member>
        <member name="M:PrtgAPI.InvalidTypeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.InvalidTypeException"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.InvalidTypeException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.InvalidTypeException"/> class with a specified type.
            </summary>
            <param name="type">The type that was not valid in the given context.</param>
        </member>
        <member name="M:PrtgAPI.InvalidTypeException.#ctor(System.Type,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.InvalidTypeException"/> class with a specified type and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="type">The type that was not valid in the given context.</param>
            <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:PrtgAPI.InvalidTypeException.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.InvalidTypeException"/> class with the tye that was expected and the actual type that was received.
            </summary>
            <param name="expectedType">The type that was expected.</param>
            <param name="actualType">The type that was received.</param>
        </member>
        <member name="M:PrtgAPI.InvalidTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.InvalidTypeException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:PrtgAPI.IFormattable">
            <summary>
            Represents a type whose value when serialized is different from its typical string representation.
            </summary>
        </member>
        <member name="M:PrtgAPI.IFormattable.GetSerializedFormat">
            <summary>
            Get the string format of this type for use in serialization requests.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.Objects.Deserialization.DeserializationHelpers.ConvertPrtgDateTime(System.Double)">
            <summary>
            Convert a PRTG OLE Automation style DateTime to local time.
            </summary>
            <param name="datetime">An OLE Automation style DateTime.</param>
            <returns>If <paramref name="datetime"/> contains a value, the PRTG DateTime formatted for the local timezone. Otherwise, null.</returns>
        </member>
        <member name="M:PrtgAPI.Objects.Deserialization.DeserializationHelpers.ConvertPrtgTimeSpan(System.Double)">
            <summary>
            Convert a PRTG TimeSpan to a <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="timespan">PRTG TimeSpan representing the number of seconds since an event occurred. If this value is null, this method will return null.</param>
            <returns></returns>
        </member>
        <member name="T:PrtgAPI.Objects.Deserialization.Data`1">
            <summary>
            Deserializes XML returned from a PRTG Request.
            </summary>
            <typeparam name="T">The type of objects to create from the request.</typeparam>
        </member>
        <member name="P:PrtgAPI.Objects.Deserialization.Data`1.TotalCount">
            <summary>
            Total number of objects returned by the request.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Deserialization.Data`1.Version">
            <summary>
            Version of PRTG running on the server.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Deserialization.Data`1.Items">
            <summary>
            List of objects of type <typeparamref name="T"/> returned from the request.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.z_Name">
            <summary>
            The name of this sensor.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.z_ParentTags">
            <summary>
            Tags that are inherited from this objects parent
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.z_Tags">
            <summary>
            Tags that are defined on this object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.z_DebugMode">
            <summary>
            How raw sensor results should be stored.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.z_WmiMode">
            <summary>
            The method used for performing WMI queries.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.z_InheritScheduleDependency">
            <summary>
            Whether to inherit Schedules, Dependencies and Maintenance Window settings from the parent object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.z_DependencyDelay">
            <summary>
            Duration (in seconds) to delay resuming this sensor after its master object returns to <see cref="F:PrtgAPI.SensorStatus.Up"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.z_InheritAccessGroup">
            <summary>
            Whether to inherit Access Rights settings from this sensor's parent object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.z_InheritChannelUnit">
            <summary>
            Whether to inherit the Channel Unit Configuration settings from this sensor's parent object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.z_Priority">
            <summary>
            The priority of this sensor.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Undocumented.SensorSettings.InheritScanningInterval">
            <summary>
            Whether to inherit Scanning Interval settings from the parent object.
            </summary>
        </member>
        <member name="T:PrtgAPI.Objects.Shared.DeviceOrGroupOrProbe">
            <summary>
            <para type="description">Properties that apply to Devices, Groups and Probes.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.DeviceOrGroupOrProbe.UpSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.Up"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.DeviceOrGroupOrProbe.DownSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.Down"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.DeviceOrGroupOrProbe.DownAcknowledgedSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.DownAcknowledged"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.DeviceOrGroupOrProbe.PartialDownSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.DownPartial"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.DeviceOrGroupOrProbe.WarningSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.Warning"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.DeviceOrGroupOrProbe.PausedSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.PausedByUser"/>, <see cref="F:PrtgAPI.SensorStatus.PausedByDependency"/>, <see cref="F:PrtgAPI.SensorStatus.PausedBySchedule"/> or <see cref="F:PrtgAPI.SensorStatus.PausedByLicense"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.DeviceOrGroupOrProbe.UnusualSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.Unusual"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.DeviceOrGroupOrProbe.UndefinedSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.Unknown"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.DeviceOrGroupOrProbe.TotalSensors">
            <summary>
            Total number of sensors in any <see cref="T:PrtgAPI.SensorStatus"/> state.
            </summary>
        </member>
        <member name="T:PrtgAPI.Objects.Shared.GroupOrProbe">
            <summary>
            Properties that apply to Groups and Probes
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.GroupOrProbe.Collapsed">
            <summary>
            Whether the object is currently expanded or collapsed in the PRTG Interface.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.GroupOrProbe.TotalGroups">
            <summary>
            Number of groups contained under this object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.GroupOrProbe.TotalDevices">
            <summary>
            Number of devices contained under this object.
            </summary>
        </member>
        <member name="T:PrtgAPI.Objects.Shared.ObjectTable">
            <summary>
            Properties that apply to objects found in tables.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.ObjectTable.Type">
            <summary>
            The type of this object. Certain objects may simply report their <see cref="T:PrtgAPI.BaseType"/>, while others may get more specific (e.g. a sensor of type "Ping").
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.ObjectTable.Tags">
            <summary>
            Tags contained on this object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.ObjectTable.Active">
            <summary>
            Whether or not the object is currently active (in a monitoring state). If false, the object is paused.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.ObjectTable.Comments">
            <summary>
            Comments present on this object.
            </summary>
        </member>
        <member name="T:PrtgAPI.Objects.Shared.PrtgObject">
            <summary>
            <para type="description">Properties that apply to all PRTG objects.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.PrtgObject.Id">
            <summary>
            ID number used to uniquely identify this object within PRTG.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.PrtgObject.Name">
            <summary>
            Name of this object.
            </summary>
        </member>
        <member name="M:PrtgAPI.Objects.Shared.PrtgObject.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe">
            <summary>
            <para type="description">Properties that apply to Sensors, Devices, Groups and Probes.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.Schedule">
            <summary>
            Monitoring schedule of this object. If this object is a report, this property displays the report generation schedule. If this object does not have a schedule, this value is null.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.BaseType">
            <summary>
            Base type of this object ("sensor", "device", etc)
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.Url">
            <summary>
            URL of this object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.ParentId">
            <summary>
            ID of this object's parent.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.NotificationTypes">
            <summary>
            Number of each notification trigger type defined on this object, as well as whether this object inherits any triggers from its parent object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.notificationTypes">
            <summary>
            Raw notification types value of this object. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.Interval">
            <summary>
            Scanning interval for this sensor.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.interval">
            <summary>
            Raw interval value of this object. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.IntervalInherited">
            <summary>
            Whether this object's Interval is inherited from its parent object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.intervalInherited">
            <summary>
            Raw inherited interval value of this object. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.Access">
            <summary>
            An <see cref="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.Access"/> value specifying the access rights of the API Request User on the specified object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.Dependency">
            <summary>
            Name of the object the monitoring of this object is dependent on. If dependency is on the parent object, value of DependencyName will be "Parent".
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.Position">
            <summary>
            Position of this object within its parent object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe.position">
            <summary>
            Raw position value of this object. This field is for internal use only.
            </summary>
        </member>
        <member name="T:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbeOrMessageOrTicket">
            <summary>
            Properties that apply to Sensors, Devices, Groups, Probes, Messages and Tickets.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbeOrMessageOrTicket.Status">
            <summary>
            <see cref="T:PrtgAPI.SensorStatus"/> of this object. If this object is a Message, this value contains the category of log message.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbeOrMessageOrTicket.Priority">
            <summary>
            <see cref="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbeOrMessageOrTicket.Priority"/> of this object.
            </summary>
        </member>
        <member name="T:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbeOrMessageOrTicketOrTicketDataOrHistory">
            <summary>
            Properties that apply to Sensors, Devices, Groups, Probes, Messages, Tickets, TicketData and History.
            </summary>
        </member>
        <member name="P:PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbeOrMessageOrTicketOrTicketDataOrHistory.Message">
            <summary>
            Message or subject displayed on an object.
            </summary>
        </member>
        <member name="M:PrtgAPI.NotificationAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.NotificationAction"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.NotificationAction.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:PrtgAPI.NotificationTrigger">
            <summary>
            <para type="description">Causes notification actions to occur when a sensor exhibits a specified behaviour.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.ObjectId">
            <summary>
            The Object ID this notification trigger applies to.
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.ParentId">
            <summary>
            The Object ID notification trigger is defined on. If this value is not the same as the <see cref="P:PrtgAPI.NotificationTrigger.ObjectId"/>, this indicates this notification trigger is inherited.
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.Inherited">
            <summary>
            Whether the notification trigger is defined on its parent object, or whether it is inherited from another object.
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.Type">
            <summary>
            The type of event that triggers this notification.
            Applies to: State, Volume, Threshold, Change, Speed Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.TypeName">
            <summary>
            Full name of the event that triggers this notification.
            Applies to: State, Volume, Threshold, Change, Speed Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.SubId">
            <summary>
            ID of the trigger on the object it is assigned to.
            Applies to: State, Volume, Threshold, Change, Speed Triggers
            </summary>
        </member>
        <member name="F:PrtgAPI.NotificationTrigger.stateTrigger">
            <summary>
            State that will cause this notification to trigger.
            Applies to: State Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.Latency">
            <summary>
            Delay (in seconds) before this notification is activated after activation requirements have been met.
            Applies to: State, Threshold, Speed Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.Channel">
            <summary>
            The channel the trigger should apply to.
            Applies to: Speed, Threshold, Volume Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.Units">
            <summary>
            The formatted units display of this trigger.
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.OnNotificationAction">
            <summary>
            Notification action that will occur when trigger is activated.
            Applies to: State, Volume, Threshold, Change, Speed Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.OffNotificationAction">
            <summary>
            Notification action that will occur when trigger is deactivated.
            Applies to: State, Threshold, Speed Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.Threshold">
            <summary>
            Value threshold required before this notification is activated.
            Applies to: Threshold, Speed Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.Condition">
            <summary>
            Condition that must be true for the trigger to activate.
            Applies to: Speed, Threshold Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.EscalationLatency">
            <summary>
            Delay before the <see cref="P:PrtgAPI.NotificationTrigger.EscalationNotificationAction"/> occurs after this trigger has been activated.
            Applies to: State Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.EscalationNotificationAction">
            <summary>
            Notification action to repeat when the trigger cause does not get cleared.
            Applies to: State Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTrigger.RepeatInterval">
            <summary>
            Interval to repeat the <see cref="P:PrtgAPI.NotificationTrigger.EscalationNotificationAction"/>, in minutes.
            Applies to: State Triggers
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorHistory.Value">
            <summary>
            Average value of the channel during the specified time period.
            </summary>
        </member>
        <member name="T:PrtgAPI.AutoMode">
            <summary>
            Specifies whether something is specified or done automatically or manually.
            </summary>
        </member>
        <member name="F:PrtgAPI.AutoMode.Automatic">
            <summary>
            The item is specified or done automatically.
            </summary>
        </member>
        <member name="F:PrtgAPI.AutoMode.Manual">
            <summary>
            The item must be specified or done manually.
            </summary>
        </member>
        <member name="T:PrtgAPI.DebugMode">
            <summary>
            Specifies whether to save debug information for troubleshooting sensor issues.
            </summary>
        </member>
        <member name="F:PrtgAPI.DebugMode.Discard">
            <summary>
            Discard all debug information.
            </summary>
        </member>
        <member name="F:PrtgAPI.DebugMode.WriteToDisk">
            <summary>
            Save debug information to disk. Debug information is stored under C:\ProgramData\Paessler\PRTG Network Monitor\Logs (Sensors) on the sensors probe server.
            </summary>
        </member>
        <member name="T:PrtgAPI.DependencyType">
            <summary>
            Specifies the object this object is dependent on. When the dependent object goes down this object will be automatically paused.
            </summary>
        </member>
        <member name="F:PrtgAPI.DependencyType.Parent">
            <summary>
            The object is dpendent on its parent (e.g. a sensor is dependent upon its device).
            </summary>
        </member>
        <member name="F:PrtgAPI.DependencyType.Object">
            <summary>
            The object is dependent on an arbitrary PRTG object.
            </summary>
        </member>
        <member name="F:PrtgAPI.DependencyType.MasterObject">
            <summary>
            Indicates that the object is the "master" object of its parent. When the master object goes down, the parent (and any objects it is the <see cref="F:PrtgAPI.DependencyType.Parent"/> of) goes down. Objects should only have one master object.
            </summary>
        </member>
        <member name="T:PrtgAPI.ErrorIntervalDown">
            <summary>
            Specifies the number of scanning intervals to wait before setting the sensor <see cref="F:PrtgAPI.SensorStatus.Down"/> when an error is reported. When an error clears, the sensor will go <see cref="F:PrtgAPI.SensorStatus.Up"/> immediately.
            </summary>
        </member>
        <member name="F:PrtgAPI.ErrorIntervalDown.DownImmediately">
            <summary>
            Set the sensor to <see cref="F:PrtgAPI.SensorStatus.Down"/>  immediately.
            </summary>
        </member>
        <member name="F:PrtgAPI.ErrorIntervalDown.OneWarningThenDown">
            <summary>
            Set the sensor to <see cref="F:PrtgAPI.SensorStatus.Warning"/>, and then to <see cref="F:PrtgAPI.SensorStatus.Down"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.ErrorIntervalDown.TwoWarningsThenDown">
            <summary>
            Set the sensor to <see cref="F:PrtgAPI.SensorStatus.Warning"/> for two intervals, and then to <see cref="F:PrtgAPI.SensorStatus.Down"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.ErrorIntervalDown.ThreeWarningsThenDown">
            <summary>
            Set the sensor to <see cref="F:PrtgAPI.SensorStatus.Warning"/> for three intervals, and then to <see cref="F:PrtgAPI.SensorStatus.Down"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.ErrorIntervalDown.FourWarningsThenDown">
            <summary>
            Set the sensor to <see cref="F:PrtgAPI.SensorStatus.Warning"/> for four intervals, and then to <see cref="F:PrtgAPI.SensorStatus.Down"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.ErrorIntervalDown.FiveWarningsThenDown">
            <summary>
            Set the sensor to <see cref="F:PrtgAPI.SensorStatus.Warning"/> for five intervals, and then to <see cref="F:PrtgAPI.SensorStatus.Down"/>.
            </summary>
        </member>
        <member name="T:PrtgAPI.ScanningInterval">
            <summary>
            Specifies the interval at which a sensor initiates a scan to refresh its data.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.ThirtySeconds">
            <summary>
            Scan every 30 seconds.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.SixtySeconds">
            <summary>
            Scan every 60 seconds.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.FiveMinutes">
            <summary>
            Scan every 5 minutes.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.TenMinutes">
            <summary>
            Scan every 10 minutes.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.FifteenMinutes">
            <summary>
            Scan every 15 minutes.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.ThirtyMinutes">
            <summary>
            Scan every 30 minutes.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.OneHour">
            <summary>
            Scan every 1 hour.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.FourHours">
            <summary>
            Scan every 4 hours.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.SixHours">
            <summary>
            Scan every 6 hours.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.TwelveHours">
            <summary>
            Scan every 12 hours.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval.TwentyFourHours">
            <summary>
            Scan every 24 hours.
            </summary>
        </member>
        <member name="T:PrtgAPI.WmiMode">
            <summary>
            Specifies the method PRTG uses to query a WMI sensor.
            </summary>
        </member>
        <member name="F:PrtgAPI.WmiMode.Default">
            <summary>
            The default query method.
            </summary>
        </member>
        <member name="F:PrtgAPI.WmiMode.Alternative">
            <summary>
            The alternative query method. May resolve errors such as "class not valid" or "invalid data" at the cost of potentially less accurate results.
            </summary>
        </member>
        <member name="T:PrtgAPI.HistoricValueMode">
            <summary>
            Specifies how values are displayed for aggregated timespans.
            </summary>
        </member>
        <member name="F:PrtgAPI.HistoricValueMode.Average">
            <summary>
            The average of values in the timespan is used.
            </summary>
        </member>
        <member name="F:PrtgAPI.HistoricValueMode.Minimum">
            <summary>
            The minimum value in the timespan is used.
            </summary>
        </member>
        <member name="F:PrtgAPI.HistoricValueMode.Maximum">
            <summary>
            The maximum value in the timespan is used.
            </summary>
        </member>
        <member name="T:PrtgAPI.Visibility">
            <summary>
            Specifies whether an item is visible or not.
            </summary>
        </member>
        <member name="F:PrtgAPI.Visibility.NotVisible">
            <summary>
            The item is not visible.
            </summary>
        </member>
        <member name="F:PrtgAPI.Visibility.Visible">
            <summary>
            The item is visible.
            </summary>
        </member>
        <member name="T:PrtgAPI.Channel">
            <summary>
            <para type="description">A value within a sensor that contains the results of monitoring operations.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.LastValue">
            <summary>
            Last value of this sensor's primary channel. If this sensor's primary channel has been recently changed, the sensor may need to be paused and unpause (otherwise it may just display "No Data").
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.LastValueNumeric">
            <summary>
            The numeric last value of this object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.lastValueNumeric">
            <summary>
            The raw numeric last value of this object. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.SensorId">
            <summary>
            ID of the sensor this channel belongs to.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.GraphVisibility">
            <summary>
            Whether this channel should be shown in graphs.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.TableVisibility">
            <summary>
            Whether this channel should be shown in tables and API responses. If this value is set to <see cref="F:PrtgAPI.Visibility.NotVisible"/> you will be unable to restore visibility without manual intervention or an existing reference to this object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.ColorMode">
            <summary>
            Whether the line color of this channel in graphs should be automatically chosen or defined manually.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.LineColor">
            <summary>
            The line color to use for this channel in graphs. Applies when <see cref="P:PrtgAPI.Channel.ColorMode"/> is <see cref="F:PrtgAPI.AutoMode.Manual"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.PercentDisplay">
            <summary>
            Specifies whether to display the actual value stored in the channel, or display the value as a percentage of a specified maximum.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.PercentValue">
            <summary>
            The maximum to use for calculating the percentage to display this channel's value as. Applies when <see cref="P:PrtgAPI.Channel.PercentDisplay"/> is <see cref="F:PrtgAPI.PercentDisplay.PercentOfMax"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.LineWidth">
            <summary>
            The width of this channel's graph line, in pixels.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.ValueMode">
            <summary>
            Controls how values are displayed in historic data of a timespan.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.DecimalMode">
            <summary>
            Controls how decimal places are displayed for the value of this channel.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.DecimalPlaces">
            <summary>
            The number of decimal places use to display the value of this channel. Applies when <see cref="P:PrtgAPI.Channel.DecimalMode"/> is <see cref="F:PrtgAPI.DecimalMode.Custom"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.SpikeFilterEnabled">
            <summary>
            Whether values that are too high or too low should be filtered out of graphs and tables.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.SpikeFilterMax">
            <summary>
            The upper limit for spike filtering. Values above this value will be ignored.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.SpikeFilterMin">
            <summary>
            The lower limit for spike filtering. Values below this value will be ignored.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.VerticalAxisScaling">
            <summary>
            Indicates how to scale this channel in graphs.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.VerticalAxisMax">
            <summary>
            Maximum value to display on the graphs vertical axis. If <see cref="P:PrtgAPI.Channel.VerticalAxisScaling"/> is <see cref="F:PrtgAPI.AutoMode.Automatic"/> this value has no effect.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.VerticalAxisMin">
            <summary>
            Minimum value to display on the graphs vertical axis. If <see cref="P:PrtgAPI.Channel.VerticalAxisScaling"/> is <see cref="F:PrtgAPI.AutoMode.Automatic"/> this value has no effect.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.LimitsEnabled">
            <summary>
            Whether warning or error limits are enabled for this channel. When this channel's value crosses these limits, the channel's sensor will transition into an error or warning state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.UpperErrorLimit">
            <summary>
            The upper error for this channel. If the <see cref="P:PrtgAPI.Channel.LastValue"/> of this channel goes above this limit, the channel will begin transitioning into an error state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.UpperWarningLimit">
            <summary>
            The upper warning limit of this channel. If the <see cref="P:PrtgAPI.Channel.LastValue"/> of this channel goes above this limit, the channel will immediately transition into a warning state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.LowerErrorLimit">
            <summary>
            The lower error for this channel. If the <see cref="P:PrtgAPI.Channel.LastValue"/> of this channel goes below this limit, the channel will begin transitioning into an error state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.LowerWarningLimit">
            <summary>
            The lower warning limit of this channel. If the <see cref="P:PrtgAPI.Channel.LastValue"/> of this channel goes below this limit, the channel will immediately transition into a warning state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.ErrorLimitMessage">
            <summary>
            The message to display when the <see cref="P:PrtgAPI.Channel.LastValue"/> of this channel goes above or below the <see cref="P:PrtgAPI.Channel.UpperErrorLimit"/> or <see cref="P:PrtgAPI.Channel.LowerErrorLimit"/> respectively.
            </summary>
        </member>
        <member name="P:PrtgAPI.Channel.WarningLimitMessage">
            <summary>
            The message to display when the <see cref="P:PrtgAPI.Channel.LastValue"/> of this channel goes above or below the <see cref="P:PrtgAPI.Channel.UpperWarningLimit"/> or <see cref="P:PrtgAPI.Channel.LowerWarningLimit"/> respectively.
            </summary>
        </member>
        <member name="T:PrtgAPI.PercentDisplay">
            <summary>
            Specifies how the value on a channel is displayed.
            </summary>
        </member>
        <member name="F:PrtgAPI.PercentDisplay.Actual">
            <summary>
            The actual value of the channel is displayed.
            </summary>
        </member>
        <member name="F:PrtgAPI.PercentDisplay.PercentOfMax">
            <summary>
            The value of the channel is displayed as a percentage of a specified maximum.
            </summary>
        </member>
        <member name="T:PrtgAPI.DecimalMode">
            <summary>
            Specifies how decimal places are displayed.
            </summary>
        </member>
        <member name="F:PrtgAPI.DecimalMode.Automatic">
            <summary>
            The number of decimal places to display is determined automatically.
            </summary>
        </member>
        <member name="F:PrtgAPI.DecimalMode.All">
            <summary>
            All decimal places are displayed.
            </summary>
        </member>
        <member name="F:PrtgAPI.DecimalMode.Custom">
            <summary>
            A specified number of decimal places are displayed.
            </summary>
        </member>
        <member name="T:PrtgAPI.Schedule">
            <summary>
            Represents a schedule used to indicate when monitoring should be active on an object.
            </summary>
        </member>
        <member name="T:PrtgAPI.SensorTotals">
            <summary>
            Indicates the total number of each type of sensor on a PRTG Server.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.UpSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.Up"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.upSensors">
            <summary>
            Raw number of up sensors. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.DownSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.Down"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.downSensors">
            <summary>
            Raw number of down sensors. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.WarningSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.Warning"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.warningSensors">
            <summary>
            Raw number of warning sensors. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.DownAcknowledgedSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.DownAcknowledged"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.downAcknowledgedSensors">
            <summary>
            Raw number of down acknowledged sensors. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.PartialDownSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.DownPartial"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.partialDownSensors">
            <summary>
            Raw number of partial down sensors. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.UnusualSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.Unusual"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.unusualSensors">
            <summary>
            Raw number of unusual sensors. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.PausedSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.PausedByUser"/>, <see cref="F:PrtgAPI.SensorStatus.PausedByDependency"/>, <see cref="F:PrtgAPI.SensorStatus.PausedBySchedule"/> or <see cref="F:PrtgAPI.SensorStatus.PausedByLicense"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.pausedSensors">
            <summary>
            Raw number of paused sensors. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.UndefinedSensors">
            <summary>
            Number of sensors in <see cref="F:PrtgAPI.SensorStatus.Unknown"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.undefinedSensors">
            <summary>
            Raw number of undefined sensors. This field is for internal use only.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.TotalSensors">
            <summary>
            Total number of sensors in any <see cref="T:PrtgAPI.SensorStatus"/> state.
            </summary>
        </member>
        <member name="P:PrtgAPI.SensorTotals.totalSensors">
            <summary>
            Raw number of total sensors. This field is for internal use only.
            </summary>
        </member>
        <member name="T:PrtgAPI.PrtgClient">
            <summary>
            <para type="description">Provides methods for generating API requests against a PRTG Network Monitor server.</para>
            </summary>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetTotalObjectsAsync(PrtgAPI.Content)">
            <summary>
            Asynchronously calcualte the total number of objects of a given type present on a PRTG Server.
            </summary>
            <param name="content">The type of object to total.</param>
            <returns>The total number of objects of a given type.</returns>
        </member>
        <member name="P:PrtgAPI.PrtgClient.Server">
            <summary>
            Gets the PRTG server API requests will be made against.
            </summary>
        </member>
        <member name="P:PrtgAPI.PrtgClient.UserName">
            <summary>
            Gets the Username that will be used to authenticate against PRTG.
            </summary>
        </member>
        <member name="P:PrtgAPI.PrtgClient.PassHash">
            <summary>
            The PassHash that will be used to authenticate with, in place of a password.
            </summary>
        </member>
        <member name="P:PrtgAPI.PrtgClient.RetryCount">
            <summary>
            The number of times to retry a request that times out while communicating with PRTG.
            </summary>
        </member>
        <member name="P:PrtgAPI.PrtgClient.RetryDelay">
            <summary>
            The base delay (in seconds) between retrying a timed out request. Each successive failure of a given request will wait an additional multiple of this value.
            </summary>
        </member>
        <member name="E:PrtgAPI.PrtgClient.RetryRequest">
            <summary>
            Occurs when a request times out while communicating with PRTG.
            </summary>
        </member>
        <member name="M:PrtgAPI.PrtgClient.#ctor(System.String,System.String,System.String,PrtgAPI.AuthMode)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.PrtgClient"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensors">
            <summary>
            Retrieve all sensors from a PRTG Server.
            </summary>
            <returns>A list of all sensors on a PRTG Server.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensorsAsync">
            <summary>
            Asynchronously retrieve all sensors from a PRTG Server.
            </summary>
            <returns>A task that returns a list of all sensors on a PRTG Server.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamSensors">
            <summary>
            Stream all sensors from a PRTG Server. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.<para/>
            </summary>
            <returns>A generator encapsulating a series of <see cref="T:System.Threading.Tasks.Task"/> objects to capable of streaming a response from a PRTG Server.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensors(PrtgAPI.SensorStatus[])">
            <summary>
            Retrieve sensors from a PRTG Server of one or more statuses.
            </summary>
            <param name="sensorStatuses">A list of sensor statuses to filter for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensorsAsync(PrtgAPI.SensorStatus[])">
            <summary>
            Asynchronously retrieve sensors from a PRTG Server of one or more statuses.
            </summary>
            <param name="sensorStatuses">A list of sensor statuses to filter for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamSensors(PrtgAPI.SensorStatus[])">
            <summary>
            Stream sensors from a PRTG Server of one or more statuses. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="sensorStatuses">A list of sensor statuses to filter for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensors(PrtgAPI.Property,System.Object)">
            <summary>
            Retrieve sensors from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensorsAsync(PrtgAPI.Property,System.Object)">
            <summary>
            Asynchronously retrieve sensors from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamSensors(PrtgAPI.Property,System.Object)">
            <summary>
            Stream sensors from a PRTG Server based on the value of a certain property. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensors(PrtgAPI.Property,PrtgAPI.FilterOperator,System.Object)">
            <summary>
            Retrieve sensors from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensorsAsync(PrtgAPI.Property,PrtgAPI.FilterOperator,System.Object)">
            <summary>
            Asynchronously retrieve sensors from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamSensors(PrtgAPI.Property,PrtgAPI.FilterOperator,System.Object)">
            <summary>
            Stream sensors from a PRTG Server based on the value of a certain property. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensors(PrtgAPI.SearchFilter[])">
            <summary>
            Retrieve sensors from a PRTG Server based on the values of multiple properties.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensorsAsync(PrtgAPI.SearchFilter[])">
            <summary>
            Asynchronously retrieve sensors from a PRTG Server based on the values of multiple properties.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamSensors(PrtgAPI.SearchFilter[])">
            <summary>
            Stream sensors from a PRTG Server based on the values of multiple properties. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensors(PrtgAPI.Parameters.SensorParameters)">
            <summary>
            Retrieve sensors from a PRTG Server using a custom set of parameters.
            </summary>
            <param name="parameters">A custom set of parameters used to retrieve PRTG Sensors.</param>
            <returns>A list of sensors that match the specified parameters.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensorsAsync(PrtgAPI.Parameters.SensorParameters)">
            <summary>
            Asynchronously retrieve sensors from a PRTG Server using a custom set of parameters.
            </summary>
            <param name="parameters">A custom set of parameters used to retrieve PRTG Sensors.</param>
            <returns>A list of sensors that match the specified parameters.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamSensors(PrtgAPI.Parameters.SensorParameters)">
            <summary>
            Stream sensors from a PRTG Server using a custom set of parameters. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="parameters">A custom set of parameters used to retrieve PRTG Sensors.</param>
            <returns>A list of sensors that match the specified parameters.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetSensorTotals">
            <summary>
            Retrieve the number of sensors of each sensor type in the system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetDevices">
            <summary>
            Retrieve all devices from a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetDevicesAsync">
            <summary>
            Asynchronously retrieve all devices from a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamDevices">
            <summary>
            Stream all devices from a PRTG Server. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetDevices(PrtgAPI.Property,System.Object)">
            <summary>
            Retrieve devices from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetDevicesAsync(PrtgAPI.Property,System.Object)">
            <summary>
            Asynchronously retrieve devices from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamDevices(PrtgAPI.Property,System.Object)">
            <summary>
            Stream devices from a PRTG Server based on the value of a certain property. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetDevices(PrtgAPI.Property,PrtgAPI.FilterOperator,System.String)">
            <summary>
            Retrieve devices from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetDevicesAsync(PrtgAPI.Property,PrtgAPI.FilterOperator,System.String)">
            <summary>
            Asynchronously retrieve devices from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamDevices(PrtgAPI.Property,PrtgAPI.FilterOperator,System.String)">
            <summary>
            Stream devices from a PRTG Server based on the value of a certain property. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetDevices(PrtgAPI.SearchFilter[])">
            <summary>
            Retrieve devices from a PRTG Server based on the values of multiple properties.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetDevicesAsync(PrtgAPI.SearchFilter[])">
            <summary>
            Asynchronously retrieve devices from a PRTG Server based on the values of multiple properties.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamDevices(PrtgAPI.SearchFilter[])">
            <summary>
            Stream devices from a PRTG Server based on the values of multiple properties. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetDevices(PrtgAPI.Parameters.DeviceParameters)">
            <summary>
            Retrieve devices from a PRTG Server using a custom set of parameters.
            </summary>
            <param name="parameters">A custom set of parameters used to retrieve PRTG Devices.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetDevicesAsync(PrtgAPI.Parameters.DeviceParameters)">
            <summary>
            Asynchronously retrieve devices from a PRTG Server using a custom set of parameters.
            </summary>
            <param name="parameters">A custom set of parameters used to retrieve PRTG Devices.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamDevices(PrtgAPI.Parameters.DeviceParameters)">
            <summary>
            Stream devices from a PRTG Server using a custom set of parameters. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="parameters">A custom set of parameters used to retrieve PRTG Devices.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetGroups">
            <summary>
            Retrieve all groups from a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetGroupsAsync">
            <summary>
            Asynchronously retrieve all groups from a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamGroups">
            <summary>
            Stream all groups from a PRTG Server. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetGroups(PrtgAPI.Property,System.Object)">
            <summary>
            Retrieve groups from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetGroupsAsync(PrtgAPI.Property,System.Object)">
            <summary>
            Asynchronously retrieve groups from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamGroups(PrtgAPI.Property,System.Object)">
            <summary>
            Stream groups from a PRTG Server based on the value of a certain property. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetGroups(PrtgAPI.Property,PrtgAPI.FilterOperator,System.String)">
            <summary>
            Retrieve groups from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetGroupsAsync(PrtgAPI.Property,PrtgAPI.FilterOperator,System.String)">
            <summary>
            Asynchronously retrieve groups from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamGroups(PrtgAPI.Property,PrtgAPI.FilterOperator,System.String)">
            <summary>
            Stream groups from a PRTG Server based on the value of a certain property. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetGroups(PrtgAPI.SearchFilter[])">
            <summary>
            Retrieve groups from a PRTG Server based on the values of multiple properties.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetGroupsAsync(PrtgAPI.SearchFilter[])">
            <summary>
            Asynchronously retrieve groups from a PRTG Server based on the values of multiple properties.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamGroups(PrtgAPI.SearchFilter[])">
            <summary>
            Stream groups from a PRTG Server based on the values of multiple properties. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetGroups(PrtgAPI.Parameters.GroupParameters)">
            <summary>
            Retrieve groups from a PRTG Server using a custom set of parameters.
            </summary>
            <param name="parameters">A custom set of parameters used to retrieve PRTG Groups.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetGroupsAsync(PrtgAPI.Parameters.GroupParameters)">
            <summary>
            Asynchronously retrieve groups from a PRTG Server using a custom set of parameters.
            </summary>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamGroups(PrtgAPI.Parameters.GroupParameters)">
            <summary>
            Stream groups from a PRTG Server using a custom set of parameters. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetProbes">
            <summary>
            Retrieve all probes from a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetProbesAsync">
            <summary>
            Asynchronously retrieve all probes from a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamProbes">
            <summary>
            Stream all probes from a PRTG Server. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetProbes(PrtgAPI.Property,System.Object)">
            <summary>
            Retrieve probes from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetProbesAsync(PrtgAPI.Property,System.Object)">
            <summary>
            Asynchronously retrieve probes from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamProbes(PrtgAPI.Property,System.Object)">
            <summary>
            Stream probes from a PRTG Server based on the value of a certain property. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetProbes(PrtgAPI.Property,PrtgAPI.FilterOperator,System.String)">
            <summary>
            Retrieve probes from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetProbesAsync(PrtgAPI.Property,PrtgAPI.FilterOperator,System.String)">
            <summary>
            Asynchronously retrieve probes from a PRTG Server based on the value of a certain property.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamProbes(PrtgAPI.Property,PrtgAPI.FilterOperator,System.String)">
            <summary>
            Stream probes from a PRTG Server based on the value of a certain property. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="property">Property to search against.</param>
            <param name="operator">Operator to compare value and property value with.</param>
            <param name="value">Value to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetProbes(PrtgAPI.SearchFilter[])">
            <summary>
            Retrieve probes from a PRTG Server based on the values of multiple properties.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetProbesAsync(PrtgAPI.SearchFilter[])">
            <summary>
            Asynchronously retrieve probes from a PRTG Server based on the values of multiple properties.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamProbes(PrtgAPI.SearchFilter[])">
            <summary>
            Stream probes from a PRTG Server based on the values of multiple properties. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="filters">One or more filters used to limit search results.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetProbes(PrtgAPI.Parameters.ProbeParameters)">
            <summary>
            Retrieve probes from a PRTG Server using a custom set of parameters.
            </summary>
            <param name="parameters">A custom set of parameters used to retrieve PRTG Probes.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetProbesAsync(PrtgAPI.Parameters.ProbeParameters)">
            <summary>
            Asynchronously retrieve probes from a PRTG Server using a custom set of parameters.
            </summary>
            <param name="parameters">A custom set of parameters used to retrieve PRTG Probes.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.StreamProbes(PrtgAPI.Parameters.ProbeParameters)">
            <summary>
            Stream probes from a PRTG Server using a custom set of parameters. When this method's response is enumerated multiple parallel requests will be executed against the PRTG Server and yielded in the order they return.
            </summary>
            <param name="parameters">A custom set of parameters used to retrieve PRTG Probes.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetChannels(System.Int32)">
            <summary>
            Retrieve all channels of a sensor.
            </summary>
            <param name="sensorId">The ID of the sensor to retrieve channels for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetNotificationActions">
            <summary>
            Retrieve all notification actions on a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetNotificationActionsAsync">
            <summary>
            Asynchronously retrieve all notification actions on a PRTG Server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetNotificationTriggers(System.Int32)">
            <summary>
            Retrieve all notification triggers of a PRTG Object.
            </summary>
            <param name="objectId">The object to retrieve triggers for.</param>
            <returns>A list of notification triggers that apply to the specified object.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetNotificationTriggersAsync(System.Int32)">
            <summary>
            Asynchronously retrieve all notification triggers of a PRTG Object.
            </summary>
            <param name="objectId">The object to retrieve triggers for.</param>
            <returns>A list of notification triggers that apply to the specified object.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetNotificationTriggerTypes(System.Int32)">
            <summary>
            Retrieve all notification trigger types supported by a PRTG Object.
            </summary>
            <param name="objectId">The object to retrieve supported trigger types for.</param>
            <returns></returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.AcknowledgeSensor(System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Mark a <see cref="F:PrtgAPI.SensorStatus.Down"/> sensor as <see cref="F:PrtgAPI.SensorStatus.DownAcknowledged"/>. If an acknowledged sensor returns to <see cref="F:PrtgAPI.SensorStatus.Up"/>, it will not be acknowledged when it goes down again.
            </summary>
            <param name="objectId">ID of the sensor to acknowledge.</param>
            <param name="duration">Duration (in minutes) to acknowledge the object for. If null, sensor will be paused indefinitely.</param>
            <param name="message">Message to display on the acknowledged sensor.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.AcknowledgeSensorAsync(System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Asynchronously mark a <see cref="F:PrtgAPI.SensorStatus.Down"/> sensor as <see cref="F:PrtgAPI.SensorStatus.DownAcknowledged"/>. If an acknowledged sensor returns to <see cref="F:PrtgAPI.SensorStatus.Up"/>, it will not be acknowledged when it goes down again.
            </summary>
            <param name="objectId">ID of the sensor to acknowledge.</param>
            <param name="duration">Duration (in minutes) to acknowledge the object for. If null, sensor will be paused indefinitely.</param>
            <param name="message">Message to display on the acknowledged sensor.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.PauseObject(System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Pause a PRTG Object (sensor, device, etc).
            </summary>
            <param name="objectId">ID of the object to pause.</param>
            <param name="durationMinutes">Duration (in minutes) to pause the object for. If null, object will be paused indefinitely.</param>
            <param name="pauseMessage">Message to display on the paused object.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.ResumeObject(System.Int32)">
            <summary>
            Resume a PRTG Object (e.g. sensor or device) from a Paused or Simulated Error state.
            </summary>
            <param name="objectId">ID of the object to resume.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.ResumeObjectAsync(System.Int32)">
            <summary>
            Asynchronously resume a PRTG Object (e.g. sensor or device) from a Paused or Simulated Error state.
            </summary>
            <param name="objectId">ID of the object to resume.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SimulateError(System.Int32)">
            <summary>
            Simulate an error state for a sensor.
            </summary>
            <param name="sensorId">ID of the sensor to simulate an error for.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SimulateErrorAsync(System.Int32)">
            <summary>
            Asynchronously simulate an error state for a sensor.
            </summary>
            <param name="sensorId">ID of the sensor to simulate an error for.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.AddNotificationTrigger(PrtgAPI.Parameters.TriggerParameters)">
            <summary>
            Add a notification trigger to a PRTG Server.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SetNotificationTrigger(PrtgAPI.Parameters.TriggerParameters)">
            <summary>
            Add or edit a notification trigger on a PRTG Server.
            </summary>
            <param name="parameters">A set of parameters describing the type of notification trigger and how to manipulate it.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.RemoveNotificationTrigger(PrtgAPI.NotificationTrigger)">
            <summary>
            Remove a notification trigger from an object.
            </summary>
            <param name="trigger">The notification trigger to remove.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.RefreshObject(System.Int32)">
            <summary>
            Request an object or any children of an object refresh themselves immediately.
            </summary>
            <param name="objectId">The ID of the sensor, or the ID of a Probe, Group or Device whose child sensors should be refreshed.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.RefreshObjectAsync(System.Int32)">
            <summary>
            Asynchronously request an object or any children of an object refresh themselves immediately.
            </summary>
            <param name="objectId">The ID of the sensor, or the ID of a Probe, Group or Device whose child sensors should be refreshed.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.AutoDiscover(System.Int32)">
            <summary>
            Automatically create sensors under an object based on the object's (or it's children's) device type.
            </summary>
            <param name="objectId">The object to run Auto-Discovery for (such as a device or group).</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.AutoDiscoverAsync(System.Int32)">
            <summary>
            Asynchronously automatically create sensors under an object based on the object's (or it's children's) device type.
            </summary>
            <param name="objectId">The object to run Auto-Discovery for (such as a device or group).</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SetPosition(System.Int32,PrtgAPI.Position)">
            <summary>
            Move the position of an object up or down under its parent within the PRTG User Interface.
            </summary>
            <param name="objectId">The object to reposition.</param>
            <param name="position">The direction to move in.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SetPosition(PrtgAPI.Objects.Shared.SensorOrDeviceOrGroupOrProbe,System.Int32)">
            <summary>
            Set the absolute position of an object under its parent within the PRTG User Interface
            </summary>
            <param name="obj">The object to reposition.</param>
            <param name="position">The position to move the object to. If this value is higher than the total number of objects under the parent node, the object will be moved to the last possible position.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.MoveObject(System.Int32,System.Int32)">
            <summary>
            Move a device or group (excluding the root group) to another group or probe within PRTG.
            </summary>
            <param name="objectId">The ID of a device or group to move.</param>
            <param name="destinationId">The group or probe to move the object to.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SortAlphabetically(System.Int32)">
            <summary>
            Sort the children of a device, group or probe alphabetically.
            </summary>
            <param name="objectId">The object to sort.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SortAlphabeticallyAsync(System.Int32)">
            <summary>
            Asynchronously sort the children of a device, group or probe alphabetically.
            </summary>
            <param name="objectId">The object to sort.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.CloneObject(System.Int32,System.String,System.Int32)">
            <summary>
            Clone a sensor or group to another device or group respectively.
            </summary>
            <param name="sourceObjectId">The ID of a sensor or group to clone.</param>
            <param name="cloneName">The name that should be given to the cloned object.</param>
            <param name="targetLocationObjectId">If this is a sensor, the ID of the device to clone to. If this is a group, the ID of the group to clone to.</param>
            <returns>The ID of the object that was created</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.CloneObject(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Clone a device to another group.
            </summary>
            <param name="deviceId">The ID of the device to clone.</param>
            <param name="cloneName">The name that should be given to the cloned device.</param>
            <param name="host">The hostname or IP Address that should be assigned to the new device.</param>
            <param name="targetGroupId">The group or probe the device should be cloned to.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.DeleteObject(System.Int32)">
            <summary>
            Permanently delete an object from PRTG. This cannot be undone.
            </summary>
            <param name="objectId">ID of the object to delete.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.DeleteObjectAsync(System.Int32)">
            <summary>
            Asynchronously permanently delete an object from PRTG. This cannot be undone.
            </summary>
            <param name="objectId">ID of the object to delete.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.RenameObject(System.Int32,System.String)">
            <summary>
            Rename an object.
            </summary>
            <param name="objectId">ID of the object to rename.</param>
            <param name="name">New name to give the object.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetTotalObjects(PrtgAPI.Content)">
            <summary>
            Calcualte the total number of objects of a given type present on a PRTG Server.
            </summary>
            <param name="content">The type of object to total.</param>
            <returns>The total number of objects of a given type.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SetObjectProperty(System.Int32,PrtgAPI.BasicObjectSetting,System.String)">
            <summary>
            Modify basic object settings (name, tags, priority, etc.) for a PRTG Object.
            </summary>
            <param name="objectId">ID of the object to modify.</param>
            <param name="name">The setting to whose value will be overwritten.</param>
            <param name="value">Value of the setting to apply.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SetObjectProperty(System.Int32,PrtgAPI.ScanningInterval,System.Object)">
            <summary>
            Modify scanning interval settings for a PRTG Object.
            </summary>
            <param name="objectId">ID of the object to modify.</param>
            <param name="name">The setting to whose value will be overwritten.</param>
            <param name="value">Value of the setting to apply.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SetObjectProperty(System.Int32,PrtgAPI.SensorDisplay,System.Object)">
            <summary>
            Modify sensor display settings for a PRTG Object.
            </summary>
            <param name="objectId">ID of the object to modify.</param>
            <param name="name">The setting to whose value will be overwritten.</param>
            <param name="value">Value of the setting to apply.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SetObjectProperty(System.Int32,PrtgAPI.ExeScriptSetting,System.Object)">
            <summary>
            Modify EXE/Script settings for a PRTG Object.
            </summary>
            <param name="objectId">ID of the object to modify.</param>
            <param name="name">The setting to whose value will be overwritten.</param>
            <param name="value">Value of the setting to apply.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SetObjectProperty(System.Int32,System.Int32,PrtgAPI.ChannelProperty,System.Object)">
            <summary>
            Modify channel properties for a PRTG Sensor.
            </summary>
            <param name="sensorId">The ID of the sensor whose channels should be modified.</param>
            <param name="channelId">The ID of the channel to modify.</param>
            <param name="property">The property of the channel to modify</param>
            <param name="value">The value to set the channel's property to.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.SetObjectPropertyAsync(System.Int32,System.Int32,PrtgAPI.ChannelProperty,System.Object)">
            <summary>
            Asynchronously modify channel properties for a PRTG Sensor.
            </summary>
            <param name="sensorId">The ID of the sensor whose channels should be modified.</param>
            <param name="channelId">The ID of the channel to modify.</param>
            <param name="property">The property of the channel to modify</param>
            <param name="value">The value to set the channel's property to.</param>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetObjectProperty(System.Int32,PrtgAPI.BasicObjectSetting)">
            <summary>
            Retrieves basic object settings (name, tags, priority, etc.) for a PRTG Object.
            </summary>
            <param name="objectId">ID of the object to retrieve settings for.</param>
            <param name="name">The setting to retrieve.</param>
            <returns>The value of the requested setting.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetObjectProperty``1(System.Int32,PrtgAPI.BasicObjectSetting)">
            <summary>
            Retrieves basic object settings (name, tags, priority, etc.) in their true data type for a PRTG Object.
            </summary>
            <typeparam name="T">The return type suggested by the documentation for the <see cref="T:PrtgAPI.BasicObjectSetting"/> specified in <paramref name="name"/>.</typeparam>
            <param name="objectId">ID of the object to retrieve settings for.</param>
            <param name="name">The setting to retrieve.</param>
            <returns>The value of the requested setting.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetObjectProperty(System.Int32,PrtgAPI.ScanningInterval)">
            <summary>
            Retrieves scanning interval related settings for a PRTG Object.
            </summary>
            <param name="objectId">ID of the object to retrieve settings for.</param>
            <param name="name">The setting to retrieve.</param>
            <returns>The value of the requested setting.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetObjectProperty``1(System.Int32,PrtgAPI.ScanningInterval)">
            <summary>
            Retrieves scanning interval related settings in their true data type for a PRTG Object.
            </summary>
            <typeparam name="T">The return type suggested by the documentation for the <see cref="T:PrtgAPI.ScanningInterval"/> specified in <paramref name="name"/>.</typeparam>
            <param name="objectId">ID of the object to retrieve settings for.</param>
            <param name="name">The setting to retrieve.</param>
            <returns>The value of the requested setting.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetObjectProperty(System.Int32,PrtgAPI.SensorDisplay)">
            <summary>
            Retrieves sensor display settings for a PRTG Object.
            </summary>
            <param name="objectId">ID of the object to retrieve settings for.</param>
            <param name="name">The setting to retrieve.</param>
            <returns>The value of the requested setting.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetObjectProperty``1(System.Int32,PrtgAPI.SensorDisplay)">
            <summary>
            Retrieves sensor display settings in their true data type for a PRTG Object.
            </summary>
            <typeparam name="T">The return type suggested by the documentation for the <see cref="T:PrtgAPI.SensorDisplay"/> specified in <paramref name="name"/>.</typeparam>
            <param name="objectId">ID of the object to retrieve settings for.</param>
            <param name="name">The setting to retrieve.</param>
            <returns>The value of the requested setting.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetObjectProperty(System.Int32,PrtgAPI.ExeScriptSetting)">
            <summary>
            Retrieves EXE/Script settings for a PRTG Object.
            </summary>
            <param name="objectId">ID of the object to retrieve settings for.</param>
            <param name="name">The setting to retrieve.</param>
            <returns>The value of the requested setting.</returns>
        </member>
        <member name="M:PrtgAPI.PrtgClient.GetObjectProperty``1(System.Int32,PrtgAPI.ExeScriptSetting)">
            <summary>
            Retrieves EXE/Script settings in their true data type for a PRTG Object.
            </summary>
            <typeparam name="T">The return type suggested by the documentation for the <see cref="T:PrtgAPI.ExeScriptSetting"/> specified in <paramref name="name"/>.</typeparam>
            <param name="objectId">ID of the object to retrieve settings for.</param>
            <param name="name">The setting to retrieve.</param>
            <returns>The value of the requested setting.</returns>
        </member>
        <member name="T:PrtgAPI.SearchFilter">
            <summary>
            <para type="description">Represents a filter used to limit search results returned by a PRTG Request.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.SearchFilter.Property">
            <summary>
            Property to filter on.
            </summary>
        </member>
        <member name="P:PrtgAPI.SearchFilter.Operator">
            <summary>
            Operator to use to filter <see cref="P:PrtgAPI.SearchFilter.Property"/> with <see cref="P:PrtgAPI.SearchFilter.Value"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.SearchFilter.Value">
            <summary>
            Value to filter on.
            </summary>
        </member>
        <member name="M:PrtgAPI.SearchFilter.#ctor(PrtgAPI.Property,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.SearchFilter"/> class.
            </summary>
            <param name="property">Property (property) to filter on.</param>
            <param name="value">Value to filter on.</param>
        </member>
        <member name="M:PrtgAPI.SearchFilter.#ctor(PrtgAPI.Property,PrtgAPI.FilterOperator,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.SearchFilter"/> class with a specified operator.
            </summary>
            <param name="property">Property (property) to filter on.</param>
            <param name="operator">Operator to use to filter <paramref name="property"/> with <paramref name="value"/></param>
            <param name="value">Value to filter on.</param>
        </member>
        <member name="M:PrtgAPI.SearchFilter.ToString">
            <summary>
            Returns the formatted string representation of this filter for use in a <see cref="T:PrtgAPI.Request.PrtgUrl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:PrtgAPI.Access">
            <summary>
            Specifies the Access Rights applied to a PRTG Object.
            </summary>
        </member>
        <member name="F:PrtgAPI.Access.Inherited">
            <summary>
            This object's access is inherited from its parent.
            </summary>
        </member>
        <member name="F:PrtgAPI.Access.None">
            <summary>
            The object is not displayed. Logs, tickets and alarms pertaining to the object are not visible.
            </summary>
        </member>
        <member name="F:PrtgAPI.Access.Read">
            <summary>
            The object can be viewed but not edited.
            </summary>
        </member>
        <member name="F:PrtgAPI.Access.Write">
            <summary>
            The object can be viewed, edited and deleted.
            </summary>
        </member>
        <member name="F:PrtgAPI.Access.Full">
            <summary>
            The object can be viewed, edited and deleted. In addition, Access Rights can be modified.
            </summary>
        </member>
        <member name="F:PrtgAPI.Access.Admin">
            <summary>
            All options are available.
            </summary>
        </member>
        <member name="T:PrtgAPI.AuthMode">
            <summary>
            Specifies the Authentication Mode used to make requests against PRTG.
            </summary>
        </member>
        <member name="F:PrtgAPI.AuthMode.PassHash">
            <summary>
            PRTG PassHash corresponding to a PRTG or Active Directory user account.
            </summary>
        </member>
        <member name="F:PrtgAPI.AuthMode.Password">
            <summary>
            Password corresponding to a PRTG or Active Directory user account.
            </summary>
        </member>
        <member name="T:PrtgAPI.BaseType">
            <summary>
            Specifies the underlying type of a PRTG Object.
            </summary>
        </member>
        <member name="F:PrtgAPI.BaseType.Sensor">
            <summary>
            An object used to monitor data on a system.
            </summary>
        </member>
        <member name="F:PrtgAPI.BaseType.Device">
            <summary>
            A computer or piece of equipment containing one or more sensors monitored by PRTG.
            </summary>
        </member>
        <member name="F:PrtgAPI.BaseType.Group">
            <summary>
            A group used to organize one or more devices.
            </summary>
        </member>
        <member name="F:PrtgAPI.BaseType.Probe">
            <summary>
            A device used to perform monitoring against a site or set of systems.
            </summary>
        </member>
        <member name="T:PrtgAPI.ChannelProperty">
            <summary>
            <para type="description">Specifies the properties of sensor channels that can be interfaced with using the PRTG API.</para>
            </summary>
        </member>
        <member name="F:PrtgAPI.ChannelProperty.SpikeFilterEnabled">
            <summary>
            Whether spike filtering is enabled for this object. If filtering is enabled, channel results outside expected ranges will be rounded to their <see cref="F:PrtgAPI.ChannelProperty.SpikeFilterMin"/>  or <see cref="F:PrtgAPI.ChannelProperty.SpikeFilterMax"/> values.
            </summary>
        </member>
        <member name="F:PrtgAPI.ChannelProperty.SpikeFilterMax">
            <summary>
            The maximum valid value of this channel. Results above this threshold will be rounded to this value.
            </summary>
        </member>
        <member name="F:PrtgAPI.ChannelProperty.SpikeFilterMin">
            <summary>
            The minimum valid value of this channel. Results below this threshold will be rounded to this value.
            </summary>
        </member>
        <member name="F:PrtgAPI.ChannelProperty.LimitsEnabled">
            <summary>
            Whether limits are enabled for this object. If limits are disabled, limit thresholds will be ignored.
            </summary>
        </member>
        <member name="F:PrtgAPI.ChannelProperty.UpperErrorLimit">
            <summary>
            The maximum value allowed before the sensor goes into an error state.
            </summary>
        </member>
        <member name="F:PrtgAPI.ChannelProperty.UpperWarningLimit">
            <summary>
            The maximum value allowed before the sensor goes into a warning state.
            </summary>
        </member>
        <member name="F:PrtgAPI.ChannelProperty.LowerErrorLimit">
            <summary>
            The minimum value allowed before the sensor goes into an error state.
            </summary>
        </member>
        <member name="F:PrtgAPI.ChannelProperty.LowerWarningLimit">
            <summary>
            The minimum value allowed before the sensor goes into a warning state.
            </summary>
        </member>
        <member name="F:PrtgAPI.ChannelProperty.ErrorLimitMessage">
            <summary>
            The message to display when this channel causes the sensor to go into an error state.
            </summary>
        </member>
        <member name="F:PrtgAPI.ChannelProperty.WarningLimitMessage">
            <summary>
            The message to display when this channel causes the sensor to go into a warning state.
            </summary>
        </member>
        <member name="T:PrtgAPI.Position">
            <summary>
            Specifies the direction to move an object when repositioning it within the PRTG User Interface.
            </summary>
        </member>
        <member name="F:PrtgAPI.Position.Up">
            <summary>
            Move the object up by one position.
            </summary>
        </member>
        <member name="F:PrtgAPI.Position.Down">
            <summary>
            Move the object down by one position.
            </summary>
        </member>
        <member name="F:PrtgAPI.Position.Top">
            <summary>
            Move the object to the top. All subsequent objects will be shifted down one position.
            </summary>
        </member>
        <member name="F:PrtgAPI.Position.Bottom">
            <summary>
            Move the object to the bottom. All objects previously preceding this object will be shifted up one position.
            </summary>
        </member>
        <member name="T:PrtgAPI.Property">
            <summary>
            <para type="description">Specifies properties (referred to by PRTG as "columns") that can be retrieved for a PRTG Object.</para>
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.ObjId">
            <summary>
            ID of the current object.
            Used in: All Object Tables
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Type">
            <summary>
            Displays the object type (group, device, report etc.) or, in case of sensors, the sensor type (ping, http, etc.).
            Used in: All Object Tables
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Name">
            <summary>
            The name of the object or channel, or in case of log messages the name of the associated object, or in case of stored reports the name of the report file.
            Used in: All Object Tables
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Tags">
            <summary>
            List of all tags. This includes tags from the object itself plus those inherited from parent objects.
            Used in: All Object Tables
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Active">
            <summary>
            Displays true/false depending whether an object is set to paused by a user (for tickets: related object). For notifications which are paused by schedule, it also displays the end of the schedule.
            Used in: All Object Tables
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Downtime">
            <summary>
            Cumulated downtime of a sensor (displayed as percentage of uptime+downtime).
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.DowntimeTime">
            <summary>
            Cumulated downtime of a sensor (in minutes/hours).
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.DowntimeSince">
            <summary>
            Elapsed time since last UP of a sensor.
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Uptime">
            <summary>
            Cumulated uptime of a sensor (displayed as percentage of uptime+downtime).
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.UptimeTime">
            <summary>
            Cumulated uptime of a sensor (in minutes/hours).
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.UptimeSince">
            <summary>
            Elapsed time since last DOWN of a sensor.
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.KnownTime">
            <summary>
            Sum of cumulated uptime and downtime of a sensor.
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.CumSince">
            <summary>
            Timestamp when accumulation of uptimes/downtimes began.
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Sensor">
            <summary>
            Name of the sensor.
            Used in: Sensors, TopLists
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Interval">
            <summary>
            This displays the effective interval setting for a sensor.
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.LastCheck">
            <summary>
            Timestamp of the last sensor result.
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.LastUp">
            <summary>
            Timestamp of the most recent UP status.
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.LastDown">
            <summary>
            Timestamp of the most recent DOWN status.
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Device">
            <summary>
            Name of the associated device.
            Used in: Sensors, Devices
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Group">
            <summary>
            Name of the associated group.
            Used in: Sensors, Devices, Groups
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Probe">
            <summary>
            Name of the associated probe.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.GrpDev">
            <summary>
            Name of associated device and group seperated by slash.
            Used in: Sensors, Devices
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.NotifiesX">
            <summary>
            Number of each trigger type defined for this sensor tree object.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.IntervalX">
            <summary>
            Displays either 'inherited' or the current interval setting of that object.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Access">
            <summary>
            Displays the access rights of the current user for a sensor tree object.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Dependency">
            <summary>
            Displays the name of an associated dependency or 'parent'.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Status">
            <summary>
            For sensor tree objects: <see cref="T:PrtgAPI.SensorStatus"/> of the object; For messages: category of the log message.
            Used  in: Sensors, Devices, Groups, Probes, Messages, Tickets
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Message">
            <summary>
            Detailed message of a sensor tree object (i.e. last error of a sensor) or a history, log, ticket subject.
            Used  in: Sensors, Devices, Groups, Probes, Messages, Tickets, TicketData, History
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Priority">
            <summary>
            Displays the priority setting of a sensor tree object or the priority of a log entry/ticket.
            Used  in: Sensors, Devices, Groups, Probes, Messages, Tickets
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.LastValue">
            <summary>
            Last sensor result value or channel values. When used with channels the 'lastvalue_' has to be used to automatically display volumes and speed.
            Used in: Sensors, Channels
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.UpSens">
            <summary>
            Number of sensors currently in an <see cref="F:PrtgAPI.SensorStatus.Up"/> state. Only the sensor itself or sensors in the hierarchy below the displayed object are counted.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.DownSens">
            <summary>
            Number of sensors currently in a <see cref="F:PrtgAPI.SensorStatus.Down"/> state. Only the sensor itself or sensors in the hierarchy below the displayed object are counted.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.DownAckSens">
            <summary>
            Number of sensors currently in a <see cref="F:PrtgAPI.SensorStatus.DownAcknowledged"/> state. Only the sensor itself or sensors in the hierarchy below the displayed object are counted.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.PartialDownSens">
            <summary>
            Number of sensors currently in a <see cref="F:PrtgAPI.SensorStatus.DownPartial"/> state. Only the sensor itself or sensors in the hierarchy below the displayed object are counted.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.WarnSens">
            <summary>
            Number of sensors currently in a <see cref="F:PrtgAPI.SensorStatus.Warning"/> state. Only the sensor itself or sensors in the hierarchy below the displayed object are counted.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.PausedSens">
            <summary>
            Number of sensors currently in a PAUSED state. This includes all PAUSED states (i.e. <see cref="F:PrtgAPI.SensorStatus.PausedByUser"/>, <see cref="F:PrtgAPI.SensorStatus.PausedByDependency"/>, <see cref="F:PrtgAPI.SensorStatus.PausedBySchedule"/> etc.).
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.UnusualSens">
            <summary>
            Number of sensors currently in a <see cref="F:PrtgAPI.SensorStatus.Unusual"/> state. Only the sensor itself or sensors in the hierarchy below the displayed object are counted.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.UndefinedSens">
            <summary>
            Number of sensors currently in a <see cref="F:PrtgAPI.SensorStatus.Unknown"/> state. Only the sensor itself or sensors in the hierarchy below the displayed object are counted.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.TotalSens">
            <summary>
            Number of sensors. Only the sensor itself or sensors in the hierarchy below the displayed object are counted.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Value_">
            <summary>
            Should only be used as 'value_', because then it will be expanded for all visible channels/toplist columns. Displays a channel value or a toplist value.
            Used in: Values, TopData
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Coverage">
            <summary>
            Displays the sensor coverage of a time span in a value table.
            Used in: Values
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Favorite">
            <summary>
            Displays an exclamation mark when the sensor tree object is marked as favorite.
            Used in: Sensors, Devices, Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.User">
            <summary>
            Displays the user responsible for a history entry or the user (or user group) a ticket is assigned to.
            Used in: History, Tickets, TicketData
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Parent">
            <summary>
            Name of the parent object of the associated object of a log message.
            Used in: Messages
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Datetime">
            <summary>
            Timestamp or timespan of an object (for tickets: last modification).
            Used in: Messages, Tickets, TicketData, Values, History, StoredReports, TopIDX
            todo: what is topidx?------------------------------------------------------------------------------
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.DateOnly">
            <summary>
            Like 'datetime' but only the date part.
            Used in: Messages, Tickets, History, Values
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.TimeOnly">
            <summary>
            Like 'datetime' but only the date part.
            Used in: Messages, Tickets, History, Values
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Schedule">
            <summary>
            For sensor tree objects this displays the name of an associated schedule, for reports this displays the report generation schedule.
            Used in: Sensors, Devices, Groups, Probes, Reports
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Period">
            <summary>
            Displays the period of a report (day, week etc.).
            Used in: Reports
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Email">
            <summary>
            Displays the email address of a report.
            Used in: Reports
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Template">
            <summary>
            Displays the template used by a report.
            Used in: Reports
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.LastRun">
            <summary>
            Timestamp of the last generation of a report.
            Used in: Reports
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.NextRun">
            <summary>
            Timestamp of the next generation of a report.
            Used in: Reports
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Size">
            <summary>
            Size of a stored report.
            Used in: StoredReports
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.MiniGraph">
            <summary>
            Numerical data for minigraphs. Numbers are 5 minute averages for the last 24 hours (must be scaled to the maximum of the series). There are two datasets: "|" separates measured value series and error series.
            Used in: Sensors
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.DeviceIcon">
            <summary>
            Device Icon.
            Used in: Devices
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Comments">
            <summary>
            Object comments (for tickets: related object).
            Used in: All Objects
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Host">
            <summary>
            Hostname or IP address.
            Used in: Devices
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Condition">
            <summary>
            Probe status for probes, auto discovery status for groups.
            Used in: Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.BaseType">
            <summary>
            Object type (string).
            Used in: All Tree Objects
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.BaseLink">
            <summary>
            URL of the object.
            Used in: All Tree Objects
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Icon">
            <summary>
            URL of the device icon.
            Used in: Devices
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.ParentId">
            <summary>
            ID of the parent object or ID of a ticket (e.g. the device of sensor, the probe of a group, etc).
            Used in: All Tree Objects, Tickets
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Location">
            <summary>
            Location property (used in Geo Maps).
            Used in: Groups, Devices
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Fold">
            <summary>
            Subobjects are folded up (true) or down (false); tickets: user (or user group) to which ticket is assinged read it since last change.
            Used in: Groups, Probes, Tickets
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.GroupNum">
            <summary>
            Number of groups in a probe/group node.
            Used in: Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.DeviceNum">
            <summary>
            Number of devices in a probe/group node.
            Used in: Groups, Probes
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.TicketType">
            <summary>
            Type of the ticket: user, notification, todo.
            Used in: Tickets
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.ModifiedBy">
            <summary>
            User who edited the ticket most recently.
            Used in: Tickets, TicketData
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Actions">
            <summary>
            Types of all ticket edits.
            Used in: TicketData
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Content">
            <summary>
            The text of the ticket that was added with the last edit, or the properties of a notification trigger.
            Used in: TicketData, Triggers
            </summary>
        </member>
        <member name="F:PrtgAPI.Property.Position">
            <summary>
            Position of the object in PRTG Tables. Internally, this value is represented as position = pos * 10
            </summary>
        </member>
        <member name="T:PrtgAPI.Content">
            <summary>
            Specifies the type of content to retrieve from a PRTG API Request.
            </summary>
        </member>
        <member name="F:PrtgAPI.Content.ProbeNode">
            <summary>
            Site containing PRTG Network Monitor software used to monitor a network.
            </summary>
        </member>
        <member name="F:PrtgAPI.Content.Groups">
            <summary>
            Groups used to organize devices.
            </summary>
        </member>
        <member name="F:PrtgAPI.Content.Devices">
            <summary>
            Computers and pieces of equipment that contain sensors monitored by PRTG.
            </summary>
        </member>
        <member name="F:PrtgAPI.Content.Sensors">
            <summary>
            Objects that monitor and collect data - the fundamental components of PRTG.
            </summary>
        </member>
        <member name="F:PrtgAPI.Content.Channels">
            <summary>
            Values within sensors that hold the results of monitoring operations.
            </summary>
        </member>
        <member name="F:PrtgAPI.Content.Notifications">
            <summary>
            Notification actions for use with notification triggers.
            </summary>
        </member>
        <member name="F:PrtgAPI.Content.Triggers">
            <summary>
            All notification triggers defined on an object, including inherited triggers.
            </summary>
        </member>
        <member name="F:PrtgAPI.Content.Trigger">
            <summary>
            Notification triggers inherited by an object.
            </summary>
        </member>
        <member name="F:PrtgAPI.Content.Values">
            <summary>
            Historical data of a PRTG Sensor.
            </summary>
        </member>
        <member name="F:PrtgAPI.Content.Objects">
            <summary>
            All content types, including those unsupported by PRTG. Note: PRTG does not recognize "objects" as a valid content type, and as such this property should be used with caution.
            </summary>
        </member>
        <member name="T:PrtgAPI.BasicObjectSetting">
            <summary>
            Specifies basic object settings, found under the "Basic Settings" section of object settings pages.
            </summary>
        </member>
        <member name="F:PrtgAPI.BasicObjectSetting.Name">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="F:PrtgAPI.BasicObjectSetting.Tags">
            <summary>
            Tags stored on the object for filtering purposes.
            </summary>
        </member>
        <member name="F:PrtgAPI.BasicObjectSetting.Priority">
            <summary>
            The order with which the object will be displayed within lists.
            </summary>
        </member>
        <member name="T:PrtgAPI.ScanningInterval_">
            <summary>
            Specifies for settings under the "Scanning Interval" header of PRTG Objects.
            </summary>
        </member>
        <member name="F:PrtgAPI.ScanningInterval_.Inherit">
            <summary>
            Whether Scanning Interval settings should be inherited from the parent object. 1: true. 0: false. WARNING: This value can only be set. Attempting to retrieve this value will throw an exception.
            </summary>
        </member>
        <member name="T:PrtgAPI.SensorDisplay">
            <summary>
            Specifies sensor display settings, found under the "Sensor Display" settings of object settings pages.
            </summary>
        </member>
        <member name="T:PrtgAPI.ExeScriptSetting">
            <summary>
            Specifies settings that apply to EXE/Script sensors.
            </summary>
        </member>
        <member name="T:PrtgAPI.FilterOperator">
            <summary>
            <para type="description">Specifies operators that can be used for filtering results in a PRTG Request.</para>
            </summary>
        </member>
        <member name="F:PrtgAPI.FilterOperator.Equals">
            <summary>
            Return results equal to a specified value.
            </summary>
        </member>
        <member name="F:PrtgAPI.FilterOperator.NotEquals">
            <summary>
            Return results not equal to a specified value.
            </summary>
        </member>
        <member name="F:PrtgAPI.FilterOperator.GreaterThan">
            <summary>
            Return results greater than a specified value.
            </summary>
        </member>
        <member name="F:PrtgAPI.FilterOperator.LessThan">
            <summary>
            Return results less than a specified value.
            </summary>
        </member>
        <member name="F:PrtgAPI.FilterOperator.Contains">
            <summary>
            Return results that contain a specified substring. Additional substrings can be specified (separated by a comma) to further refine results.
            </summary>
        </member>
        <member name="T:PrtgAPI.Output">
            <summary>
            Specifies how a PRTG Response should be formatted.
            </summary>
        </member>
        <member name="F:PrtgAPI.Output.Xml">
            <summary>
            XML file.
            </summary>
        </member>
        <member name="F:PrtgAPI.Output.XmlTable">
            <summary>
            Table in XML format.
            </summary>
        </member>
        <member name="F:PrtgAPI.Output.CsvTable">
            <summary>
            CSV table.
            </summary>
        </member>
        <member name="F:PrtgAPI.Output.Html">
            <summary>
            HTML table.
            </summary>
        </member>
        <member name="T:PrtgAPI.Parameter">
            <summary>
            Specifies fields to be included in a PRTG API Request.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Username">
            <summary>
            Username to authenticate against PRTG. If PRTG has been configured to use Active Directory, this can be the username of a Domain User.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Password">
            <summary>
            Password to authenticate against PRTG.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.PassHash">
            <summary>
            PassHash to authenticate against PRTG. Alternative to using <see cref="F:PrtgAPI.Parameter.Password"/>
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Content">
            <summary>
            A <see cref="T:PrtgAPI.Content"/> value representing a PRTG object type.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Columns">
            <summary>
            One or more <see cref="T:PrtgAPI.Property"/> values specifying properties that will be retrieved for a PRTG Object.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Output">
            <summary>
            A <see cref="F:PrtgAPI.Parameter.Output"/> value specifying the format the PRTG Response will be stored in.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Count">
            <summary>
            Maximum number of records returned from a PRTG Request. Maximum: 50000
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Start">
            <summary>
            Record number to start with. Used in conjunction with <see cref="F:PrtgAPI.Parameter.Count"/> to request data page by page.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.FilterRecordAge">
            <summary>
            A <see cref="T:PrtgAPI.RecordAge"/> value limiting records returned to those within this time period.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.FilterStatus">
            <summary>
            One or more <see cref="T:PrtgAPI.SensorStatus"/> values used to retrieve sensors in specified states.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.FilterTags">
            <summary>
            One or more string values limiting objects returned to only those with these tag attributes.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.FilterXyz">
            <summary>
            Used to filter objects returned based on the value of a specified <see cref="T:PrtgAPI.Property"/>.
            When submitting a PRTG Request, the name of the Property being filtered on should be added to the value of this parameter (e.g. filter_name).
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.SortBy">
            <summary>
            A <see cref="T:PrtgAPI.Property"/> used to specify which property to sort PRTG Response by.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Show">
            <summary>
            A <see cref="T:PrtgAPI.CustomNumberFormat"/> specifying how values should be displayed.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Id">
            <summary>
            ID of the object to operate upon.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Name">
            <summary>
            The <see cref="T:PrtgAPI.Property"/> of <see cref="F:PrtgAPI.Parameter.Id"/> to operate upon.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Value">
            <summary>
            The value to store in the property referenced by <see cref="F:PrtgAPI.Parameter.Name"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.PauseMessage">
            <summary>
            Message to display on a paused object.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Action">
            <summary>
            Action to perform for a PRTG Function. Meaning of value is dependent on function being excuted. Simulate an error: 1 (on simulate.htm). Pause indefinitely: 0 (on pause.htm). Resume monitoring of an object: 1 (on pause.htm)
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Duration">
            <summary>
            Duration to pause or acknowledge an object for, in minutes.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.AcknowledgeMessage">
            <summary>
            Message to display on an acknowledged sensor.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.NewPos">
            <summary>
            The new position of the object.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Host">
            <summary>
            The hostname of the new object.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.TargetId">
            <summary>
            The object targeted by the API call.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.SubId">
            <summary>
            The ID of the object.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.SubType">
            <summary>
            The type of object to change properties for.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Approve">
            <summary>
            Whether or not approval is granted to perform an action.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Custom">
            <summary>
            Allows using custom parameters not known to PrtgAPI, including parameters whose names are dynamically generated. For use with <see cref="T:PrtgAPI.Parameters.CustomParameter"/> 
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.Channel">
            <summary>
            ID of the channel to retrieve properties for.
            </summary>
        </member>
        <member name="F:PrtgAPI.Parameter.ObjectType">
            <summary>
            The type of object to retrieve details for.
            </summary>
        </member>
        <member name="T:PrtgAPI.ParameterType">
            <summary>
            Specifies how <see cref="T:PrtgAPI.Parameter"/> values can be formatted when inserted in a <see cref="T:PrtgAPI.Request.PrtgUrl"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.ParameterType.SingleValue">
            <summary>
            <see cref="T:PrtgAPI.Parameter"/> is used with a single value under a single parameter instance, i.e. param=value.
            </summary>
        </member>
        <member name="F:PrtgAPI.ParameterType.MultiValue">
            <summary>
            <see cref="T:PrtgAPI.Parameter"/> is used with multiple values under a single parameter instance, i.e. param=value1,value2.
            </summary>
        </member>
        <member name="F:PrtgAPI.ParameterType.MultiParameter">
            <summary>
            <see cref="T:PrtgAPI.Parameter"/> is used with multiple values under multiple instances of a parameter (one value per instance), i.e. param=value1&amp;param=value2.
            </summary>
        </member>
        <member name="T:PrtgAPI.PauseAction">
            <summary>
            Specifies states that allow an object to be paused or resumed.
            </summary>
        </member>
        <member name="F:PrtgAPI.PauseAction.Pause">
            <summary>
            Pause the object.
            </summary>
        </member>
        <member name="F:PrtgAPI.PauseAction.Resume">
            <summary>
            Resume (unpause) an object.
            </summary>
        </member>
        <member name="T:PrtgAPI.Priority">
            <summary>
            Specifies the order in which objects are displayed in PRTG table lists, with objects with higher priorities displayed first.
            </summary>
        </member>
        <member name="F:PrtgAPI.Priority.None">
            <summary>
            This object does not have a priority specified.
            </summary>
        </member>
        <member name="F:PrtgAPI.Priority.One">
            <summary>
            Priority 1 (lowest priority).
            </summary>
        </member>
        <member name="F:PrtgAPI.Priority.Two">
            <summary>
            Priority 2.
            </summary>
        </member>
        <member name="F:PrtgAPI.Priority.Three">
            <summary>
            Prioroty 3.
            </summary>
        </member>
        <member name="F:PrtgAPI.Priority.Four">
            <summary>
            Priority 4.
            </summary>
        </member>
        <member name="F:PrtgAPI.Priority.Five">
            <summary>
            Priority 5 (highest priority).
            </summary>
        </member>
        <member name="T:PrtgAPI.RecordAge">
            <summary>
            Specifies time spans for filtering records by.
            </summary>
        </member>
        <member name="F:PrtgAPI.RecordAge.Today">
            <summary>
            Records that were created today.
            </summary>
        </member>
        <member name="F:PrtgAPI.RecordAge.Yesterday">
            <summary>
            Records that were created yesterday.
            </summary>
        </member>
        <member name="F:PrtgAPI.RecordAge.LastWeek">
            <summary>
            Records that were created within the last 7 days.
            </summary>
        </member>
        <member name="F:PrtgAPI.RecordAge.LastMonth">
            <summary>
            Records that were created within the last 30 days.
            </summary>
        </member>
        <member name="F:PrtgAPI.RecordAge.LastSixMonths">
            <summary>
            Records that were created within the last 6 months.
            </summary>
        </member>
        <member name="F:PrtgAPI.RecordAge.LastYear">
            <summary>
            Records that were created within the last 12 months.
            </summary>
        </member>
        <member name="T:PrtgAPI.SensorStatus">
            <summary>
            <para type="description">Specifies states capable of being held by sensors.</para>
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.None">
            <summary>
            Sensor is transitioning between states or is <see cref="F:PrtgAPI.SensorStatus.Unknown"/> but is malfunctioning.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.Unknown">
            <summary>
            Sensor is unable to collect data.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.Collecting">
            <summary>
            This value is no longer used by PRTG, however is considered analogous to <see cref="F:PrtgAPI.SensorStatus.Up"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.Up">
            <summary>
            Sensor is in an up and working state.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.Warning">
            <summary>
            Sensor is behaving abnormally, but has not yet failed.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.Down">
            <summary>
            Sensor is down and has failed.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.NoProbe">
            <summary>
            This value is no longer used by PRTG, however is considered analogous to <see cref="F:PrtgAPI.SensorStatus.Unknown"/>.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.PausedByUser">
            <summary>
            Sensor has been paused indefinitely by a user.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.PausedByDependency">
            <summary>
            Sensor has been paused due to a dependency on another sensor (e.g. the device is not pingable)
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.PausedBySchedule">
            <summary>
            Sensor has been paused automatically by a schedule used to control monitoring windows.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.Unusual">
            <summary>
            Sensor data is outside of normal ranges, potentially indicating an issue.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.PausedByLicense">
            <summary>
            Sensor has been paused due to sensor limits imposed by a chance in license.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.PausedUntil">
            <summary>
            Sensor has been paused temporarily by a user until a specified time period.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.DownAcknowledged">
            <summary>
            Sensor is down but has been acknowledged by a user.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.DownPartial">
            <summary>
            Sensor is down for at least one node in a PRTG Cluster.
            </summary>
        </member>
        <member name="F:PrtgAPI.SensorStatus.Paused">
            <summary>
            Sensor is in any paused state.
            </summary>
        </member>
        <member name="T:PrtgAPI.XmlFunction">
            <summary>
            Specifies API Request Pages that return XML.
            </summary>
        </member>
        <member name="F:PrtgAPI.XmlFunction.TableData">
            <summary>
            Retrieve data stored by PRTG in tables (Sensors, Devices, Probes, etc).
            </summary>
        </member>
        <member name="F:PrtgAPI.XmlFunction.GetStatus">
            <summary>
            Retrieve the current system status.
            </summary>
        </member>
        <member name="F:PrtgAPI.XmlFunction.GetObjectProperty">
            <summary>
            Retrieve the value of a <see cref="T:PrtgAPI.Property"/> for a specified PRTG Object.
            </summary>
        </member>
        <member name="F:PrtgAPI.XmlFunction.GetTreeNodeStats">
            <summary>
            Get sensor totals (up, down, paused, etc) for a PRTG Server.
            </summary>
        </member>
        <member name="T:PrtgAPI.CustomNumberFormat">
            <summary>
            Specifies alternate methods of formatting values returned from PRTG Requests.
            </summary>
        </member>
        <member name="F:PrtgAPI.CustomNumberFormat.Text">
            <summary>
            Display values using symbols instead of numbers, e.g. five stars (*****) for <see cref="F:PrtgAPI.Priority.Five"/>.
            </summary>
        </member>
        <member name="T:PrtgAPI.Exceptions.Internal.MissingAttributeException">
            <summary>
            The exception that is thrown when a type property is missing a required attribute.
            </summary>
        </member>
        <member name="M:PrtgAPI.Exceptions.Internal.MissingAttributeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Exceptions.Internal.MissingAttributeException"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.Exceptions.Internal.MissingAttributeException.#ctor(System.Type,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Exceptions.Internal.MissingAttributeException"/> class with the attribute that was missing, the property it was missing from, and the type the property belonged to.
            </summary>
            <param name="type">The type whose property was missing an attribute.</param>
            <param name="property">The property that was missing an attribute.</param>
            <param name="attribute">The attribute that was missing.</param>
        </member>
        <member name="M:PrtgAPI.Exceptions.Internal.MissingAttributeException.#ctor(System.Type,System.String,System.Type,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Exceptions.Internal.MissingAttributeException"/> class with the attribute that was missing, the property it was missing from, and the type the property belonged to and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="type">The type whose property was missing an attribute.</param>
            <param name="property">The property that was missing an attribute.</param>
            <param name="attribute">The attribute that was missing.</param>
            <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:PrtgAPI.Exceptions.Internal.MissingAttributeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Exceptions.Internal.MissingAttributeException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:PrtgAPI.Exceptions.Internal.MissingParameterTypeException">
            <summary>
            The exception that is thrown when a <see cref="T:PrtgAPI.Parameter"/> is missing a <see cref="T:PrtgAPI.ParameterType"/> .
            </summary>
        </member>
        <member name="M:PrtgAPI.Exceptions.Internal.MissingParameterTypeException.#ctor(PrtgAPI.Parameter)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Exceptions.Internal.MissingParameterTypeException"/> class with a specified <see cref="T:PrtgAPI.Parameter"/>.
            </summary>
            <param name="parameter">The parameter missing a <see cref="T:PrtgAPI.Attributes.ParameterTypeAttribute"/> property that caused this exception.</param>
        </member>
        <member name="M:PrtgAPI.Exceptions.Internal.MissingParameterTypeException.#ctor(PrtgAPI.Parameter,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Exceptions.Internal.MissingParameterTypeException"/> class with a specified <see cref="T:PrtgAPI.Parameter"/> and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="parameter">The parameter missing a <see cref="T:PrtgAPI.Attributes.ParameterTypeAttribute"/> property that caused this exception.</param>
            <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:PrtgAPI.Exceptions.Internal.MissingParameterTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.Exceptions.Internal.MissingParameterTypeException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:PrtgAPI.PrtgRequestException">
            <summary>
            The exception that is thrown when a PRTG Request contains any error messages.
            </summary>
        </member>
        <member name="M:PrtgAPI.PrtgRequestException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.PrtgRequestException"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.PrtgRequestException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.PrtgRequestException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:PrtgAPI.PrtgRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.PrtgRequestException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:PrtgAPI.PrtgRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.PrtgRequestException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:PrtgAPI.UnknownTypeException">
            <summary>
            The exception that is thrown when a method does not know how to convert a generic object to its actual type.
            </summary>
        </member>
        <member name="M:PrtgAPI.UnknownTypeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.UnknownTypeException"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.UnknownTypeException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.UnknownTypeException"/> class with a specified type.
            </summary>
            <param name="type">The type whose conversion implementation could not be found.</param>
        </member>
        <member name="M:PrtgAPI.UnknownTypeException.#ctor(System.Type,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.UnknownTypeException"/> class with a specified type and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="type">The type whose conversion implementation could not be found.</param>
            <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:PrtgAPI.UnknownTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.UnknownTypeException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:PrtgAPI.XmlDeserializationException">
            <summary>
            The exception that is thrown when an XML document cannot be deserialized.
            </summary>
        </member>
        <member name="M:PrtgAPI.XmlDeserializationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.XmlDeserializationException"/> class.
            </summary>
        </member>
        <member name="M:PrtgAPI.XmlDeserializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.XmlDeserializationException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:PrtgAPI.XmlDeserializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.XmlDeserializationException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:PrtgAPI.XmlDeserializationException.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.XmlDeserializationException"/> class with the outer type that was being deserialized and the XML that is believed to have caused the exception.
            </summary>
            <param name="type">The outer type that was being deserialized.</param>
            <param name="xml">The XML believed to have caused the exception.</param>
        </member>
        <member name="M:PrtgAPI.XmlDeserializationException.#ctor(System.Type,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.XmlDeserializationException"/> class with the outer type that was being deserialized, the XML that is believed to have caused the exception and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="type">The outer type that was being deserialized.</param>
            <param name="xml">The XML believed to have caused the exception.</param>
            <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:PrtgAPI.XmlDeserializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.XmlDeserializationException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:PrtgAPI.NotificationTypes">
            <summary>
            Specifies the number of notification triggers on a PRTG Object, as well as whether any triggers are inherited from parent objects
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTypes.StateTriggers">
            <summary>
            Number of State Triggers defined on a PRTG Object.
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTypes.ThresholdTriggers">
            <summary>
            Number of Threshold Triggers defined on a PRTG Object.
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTypes.ChangeTriggers">
            <summary>
            Number of Change Triggers defined on a PRTG Object.
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTypes.SpeedTriggers">
            <summary>
            Number of Speed Triggers defined on a PRTG Object.
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTypes.VolumeTriggers">
            <summary>
            Number of Volume Triggers defined on a PRTG Object.
            </summary>
        </member>
        <member name="P:PrtgAPI.NotificationTypes.TriggerInheritance">
            <summary>
            Whether notification triggers are inherited from a PRTG Object's parent object.
            </summary>
        </member>
        <member name="M:PrtgAPI.NotificationTypes.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PrtgAPI.NotificationTypes"/> class.
            </summary>
            <param name="rawNotificationTypes">Raw <see cref="F:PrtgAPI.Property.NotifiesX"/> value returned from a PRTG Request.</param>
        </member>
        <member name="M:PrtgAPI.NotificationTypes.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:PrtgAPI.Probe">
            <summary>
            <para type="description">A device used to perform monitoring against a site or set of systems.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.Probe.Condition">
            <summary>
            Connected status of the probe.
            </summary>
        </member>
        <member name="T:PrtgAPI.Device">
            <summary>
            <para type="description">A computer or piece of equipment containing one or more sensors monitored by PRTG.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.Device.Location">
            <summary>
            Location of this object.
            </summary>
        </member>
        <member name="P:PrtgAPI.Device.Host">
            <summary>
            The Hostname or IP Address of this device.
            </summary>
        </member>
        <member name="P:PrtgAPI.Device.Group">
            <summary>
            Group this device is contained in.
            </summary>
        </member>
        <member name="P:PrtgAPI.Device.Probe">
            <summary>
            Probe that monitors this device's sensors.
            </summary>
        </member>
        <member name="P:PrtgAPI.Device.Favorite">
            <summary>
            Whether this object has been marked as a favorite.
            </summary>
        </member>
        <member name="P:PrtgAPI.Device.Condition">
            <summary>
            Auto-discovery progress (if one is in progress). Otherwise, null.
            </summary>
        </member>
        <member name="T:PrtgAPI.Group">
            <summary>
            <para type="description">A group used to organize one or more devices.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.Group.Probe">
            <summary>
            Probe that manages the execution of the sensors contained within this group's devices.
            </summary>
        </member>
        <member name="P:PrtgAPI.Group.Condition">
            <summary>
            Auto-discovery progress (if one is in progress). Otherwise, null.
            </summary>
        </member>
        <member name="T:PrtgAPI.Sensor">
            <summary>
            <para type="description">An object that monitors and collects information according to a defined schedule.</para>
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.Probe">
            <summary>
            Probe that manages the execution of this sensor.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.Group">
            <summary>
            Group this sensor's <see cref="P:PrtgAPI.Sensor.Device"/> is contained in.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.Favorite">
            <summary>
            Whether this object has been marked as a favorite.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.LastValue">
            <summary>
            Last value of this sensor's primary channel. If this sensor's primary channel has been recently changed, the sensor may need to be paused and unpause (otherwise it may just display "No Data").
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.Device">
            <summary>
            Device this sensor monitors.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.Downtime">
            <summary>
            Percentage indicating overall downtime of this object over its entire lifetime. See also: <see cref="P:PrtgAPI.Sensor.Uptime"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.TotalDowntime">
            <summary>
            Total amount of time sensor has ever been in a down state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.DownDuration">
            <summary>
            Amount of time passed since sensor was last in an up state. If sensor is currently up, this value is null.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.Uptime">
            <summary>
            Percentage indicating overall uptime of this object over its entire lifetime. See also: <see cref="P:PrtgAPI.Sensor.Downtime"/>.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.TotalUptime">
            <summary>
            Total amount of time sensor has ever been in an up state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.UpDuration">
            <summary>
            Amount of time passed since sensor was last in an down state. If sensor is currently down, this value is null.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.TotalMonitorTime">
            <summary>
            Total amount of time this sensor has been in an up or down state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.DataCollectedSince">
            <summary>
            When data collection on this sensor began.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.LastCheck">
            <summary>
            When this sensor last checked for a value.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.LastUp">
            <summary>
            When this object was last in an up state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.LastDown">
            <summary>
            When this value was last in a down state.
            </summary>
        </member>
        <member name="P:PrtgAPI.Sensor.MiniGraph">
            <summary>
            CSV of sensor values for the past 24 hours. Numbers are stored as 5 minute averages. Value contains two sets of CSVs: measured values and errors. Sets are separated by a pipe . If MiniGraphs are disabled, this value is null.
            </summary>
        </member>
    </members>
</doc>
